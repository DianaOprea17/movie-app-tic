{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"navbar\"\n};\nconst _hoisted_2 = {\n  class: \"nav-links\"\n};\nconst _hoisted_3 = {\n  class: \"nav-link\"\n};\nconst _hoisted_4 = {\n  class: \"container\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"addmovieform\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"search-filter\"\n};\nconst _hoisted_9 = {\n  class: \"filter-wrap\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"filter-container\"\n};\nconst _hoisted_11 = {\n  class: \"filter-options\"\n};\nconst _hoisted_12 = {\n  key: 0\n};\nconst _hoisted_13 = {\n  key: 0\n};\nconst _hoisted_14 = {\n  class: \"movie-list\"\n};\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = [\"src\", \"alt\"];\nconst _hoisted_17 = {\n  class: \"movie-details\"\n};\nconst _hoisted_18 = {\n  class: \"modal-body\"\n};\nconst _hoisted_19 = [\"src\", \"alt\"];\nconst _hoisted_20 = {\n  class: \"modal-info\"\n};\nconst _hoisted_21 = {\n  key: 0\n};\nconst _hoisted_22 = {\n  key: 2\n};\nconst _hoisted_23 = {\n  key: 4\n};\nconst _hoisted_24 = {\n  key: 6\n};\nconst _hoisted_25 = {\n  key: 8\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"nav\", _hoisted_1, [_cache[24] || (_cache[24] = _createElementVNode(\"div\", {\n    class: \"nav-logo\"\n  }, [_createElementVNode(\"span\", {\n    class: \"logo\"\n  }, \" Movie Tracker\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", _hoisted_3, _toDisplayString($data.username ? `${$data.username}'s Movie List` : \"Your Movie List\"), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleForm && $options.toggleForm(...args)),\n    class: \"nav-btn\"\n  }, \"Add New Movie\"), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.signoutuser && $options.signoutuser(...args)),\n    class: \"nav-btn\"\n  }, \" Sign out\")])]), _createElementVNode(\"div\", _hoisted_4, [$data.isFormVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[34] || (_cache[34] = _createElementVNode(\"h2\", null, \"Add a New Movie\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[8] || (_cache[8] = _withModifiers((...args) => $options.addMovie && $options.addMovie(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[25] || (_cache[25] = _createElementVNode(\"label\", {\n    for: \"movieTitle\"\n  }, \"Title:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"movieTitle\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.newMovie.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.title]])]), _createElementVNode(\"div\", null, [_cache[27] || (_cache[27] = _createElementVNode(\"label\", {\n    for: \"movieGenre\"\n  }, \"Genre:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"movieGenre\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newMovie.genre = $event),\n    required: \"\"\n  }, _cache[26] || (_cache[26] = [_createStaticVNode(\"<option value=\\\"\\\" disabled selected>Select a genre</option><option value=\\\"Action\\\">Action</option><option value=\\\"Animation\\\">Animation</option><option value=\\\"Comedy\\\">Comedy</option><option value=\\\"Drama\\\">Drama</option><option value=\\\"Horror\\\">Horror</option><option value=\\\"Romance\\\">Romance</option><option value=\\\"Sci-Fi\\\">Sci-Fi</option><option value=\\\"Thriller\\\">Thriller</option>\", 9)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.newMovie.genre]])]), _createElementVNode(\"div\", null, [_cache[28] || (_cache[28] = _createElementVNode(\"label\", {\n    for: \"movieDate\"\n  }, \"Date:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"movieDate\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.newMovie.date = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.date]])]), _createElementVNode(\"div\", null, [_cache[29] || (_cache[29] = _createElementVNode(\"label\", {\n    for: \"movieScore\"\n  }, \"Score:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"movieScore\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.newMovie.score = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.score]])]), _createElementVNode(\"div\", null, [_cache[30] || (_cache[30] = _createElementVNode(\"label\", {\n    for: \"details\"\n  }, \"Other Details: \", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"details\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.newMovie.details = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.details]])]), _createElementVNode(\"div\", null, [_cache[31] || (_cache[31] = _createElementVNode(\"label\", {\n    for: \"moviePoster\"\n  }, \"Movie Poster:\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"moviePoster\",\n    onChange: _cache[7] || (_cache[7] = (...args) => $options.handleImageUpload && $options.handleImageUpload(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), $data.imagePreview ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[32] || (_cache[32] = _createElementVNode(\"h3\", null, \"Image Preview:\", -1 /* HOISTED */)), _createElementVNode(\"img\", {\n    src: $data.imagePreview,\n    alt: \"Image Preview\",\n    style: {\n      \"max-width\": \"200px\",\n      \"margin-top\": \"10px\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_7)])) : _createCommentVNode(\"v-if\", true), _cache[33] || (_cache[33] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn-form\"\n  }, \"Add Movie\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.searched = $event),\n    type: \"text\",\n    placeholder: \"Search\",\n    class: \"search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searched]]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.toggleFilter && $options.toggleFilter(...args)),\n    class: \"filter-btn\"\n  }, \"Filter by\"), $data.isFilterVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[38] || (_cache[38] = _createElementVNode(\"label\", {\n    for: \"filterType\"\n  }, \"Choose filter:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"filterType\",\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.selectedFilter = $event)\n  }, _cache[35] || (_cache[35] = [_createElementVNode(\"option\", {\n    value: \"\"\n  }, \"None\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"genre\"\n  }, \"Genre\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedFilter]]), $data.selectedFilter === 'genre' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_cache[37] || (_cache[37] = _createElementVNode(\"label\", {\n    for: \"genreFilter\"\n  }, \"Choose Genre:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"genreFilter\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.selectedGenre = $event)\n  }, _cache[36] || (_cache[36] = [_createStaticVNode(\"<option value=\\\"\\\">All</option><option value=\\\"Action\\\">Action</option><option value=\\\"Animation\\\">Animation</option><option value=\\\"Comedy\\\">Comedy</option><option value=\\\"Drama\\\">Drama</option><option value=\\\"Horror\\\">Horror</option><option value=\\\"Romance\\\">Romance</option><option value=\\\"Sci-Fi\\\">Sci-Fi</option><option value=\\\"Thriller\\\">Thriller</option>\", 9)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedGenre]])])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)])]), $data.filteredMovies.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredMovies, movie => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: movie.id,\n      class: \"movie-item\",\n      onClick: $event => $options.showMovieDetails(movie)\n    }, [_createElementVNode(\"img\", {\n      src: movie.posterURL,\n      alt: movie.title,\n      class: \"movie-poster\"\n    }, null, 8 /* PROPS */, _hoisted_16), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"strong\", null, _toDisplayString(movie.title), 1 /* TEXT */), _cache[39] || (_cache[39] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */))])], 8 /* PROPS */, _hoisted_15);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.selectedMovie ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"modal-overlay\",\n    onClick: _cache[23] || (_cache[23] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"modal-content\",\n    onClick: _cache[22] || (_cache[22] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_createElementVNode(\"button\", {\n    class: \"close-button\",\n    onClick: _cache[13] || (_cache[13] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"×\"), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"img\", {\n    src: $data.selectedMovie.posterURL,\n    alt: $data.selectedMovie.title,\n    class: \"modal-poster\"\n  }, null, 8 /* PROPS */, _hoisted_19), _createElementVNode(\"div\", _hoisted_20, [!$data.isEditing ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_21, _toDisplayString($data.selectedMovie.title), 1 /* TEXT */)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.editedMovie.title = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.title]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_22, [_cache[40] || (_cache[40] = _createElementVNode(\"strong\", null, \"Genre:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedMovie.genre), 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 3,\n    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.editedMovie.genre = $event)\n  }, _cache[41] || (_cache[41] = [_createStaticVNode(\"<option value=\\\"Action\\\">Action</option><option value=\\\"Animation\\\">Animation</option><option value=\\\"Comedy\\\">Comedy</option><option value=\\\"Drama\\\">Drama</option><option value=\\\"Horror\\\">Horror</option><option value=\\\"Romance\\\">Romance</option><option value=\\\"Sci-Fi\\\">Sci-Fi</option><option value=\\\"Thriller\\\">Thriller</option>\", 8)]), 512 /* NEED_PATCH */)), [[_vModelSelect, $data.editedMovie.genre]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_23, [_cache[42] || (_cache[42] = _createElementVNode(\"strong\", null, \"Date seen:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.formatDate($data.selectedMovie.date)), 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 5,\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.editedMovie.date = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.date]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_24, [_cache[43] || (_cache[43] = _createElementVNode(\"strong\", null, \"Score:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedMovie.score) + \"/10\", 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 7,\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $data.editedMovie.score = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.score]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_25, [_cache[44] || (_cache[44] = _createElementVNode(\"strong\", null, \"Other Details:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedMovie.details), 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 9,\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $data.editedMovie.details = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.details]]), _createElementVNode(\"button\", {\n    class: \"edit-button\",\n    onClick: _cache[19] || (_cache[19] = (...args) => $options.editMovie && $options.editMovie(...args))\n  }, \"Edit\"), _createElementVNode(\"button\", {\n    class: \"delete-button\",\n    onClick: _cache[20] || (_cache[20] = (...args) => $options.deleteMovie && $options.deleteMovie(...args))\n  }, \"Delete\"), $data.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 10,\n    onClick: _cache[21] || (_cache[21] = (...args) => $options.saveMovieEdits && $options.saveMovieEdits(...args))\n  }, \"Save\")) : _createCommentVNode(\"v-if\", true)])])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$data","username","onClick","_cache","args","$options","toggleForm","type","signoutuser","_hoisted_4","isFormVisible","_hoisted_5","onSubmit","_withModifiers","addMovie","for","id","$event","newMovie","title","required","genre","_createStaticVNode","date","score","details","onChange","handleImageUpload","accept","imagePreview","_hoisted_6","src","alt","style","_hoisted_7","_createCommentVNode","_hoisted_8","searched","placeholder","_hoisted_9","toggleFilter","isFilterVisible","_hoisted_10","_hoisted_11","selectedFilter","value","_hoisted_12","selectedGenre","filteredMovies","length","_hoisted_13","_hoisted_14","_Fragment","_renderList","movie","showMovieDetails","posterURL","_hoisted_16","_hoisted_17","_hoisted_15","selectedMovie","closeModal","_hoisted_18","_hoisted_19","_hoisted_20","isEditing","_hoisted_21","editedMovie","_hoisted_22","_createTextVNode","_hoisted_23","formatDate","_hoisted_24","_hoisted_25","editMovie","deleteMovie","saveMovieEdits"],"sources":["D:\\facultate\\mastrer\\movie-app-tic\\front\\client\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n      <nav class=\"navbar\">\r\n        <div class=\"nav-logo\">\r\n          <span class=\"logo\"> Movie Tracker</span>\r\n        </div>\r\n\r\n        <div class=\"nav-links\">\r\n          <span class=\"nav-link\">{{ username ? `${username}'s Movie List` : \"Your Movie List\" }}</span>\r\n          <button @click=\"toggleForm\" class=\"nav-btn\">Add New Movie</button>\r\n          <button type = button v-on:click=\"signoutuser\" class=\"nav-btn\"> Sign out</button>\r\n        </div>\r\n      </nav>\r\n\r\n      <div class=\"container\">\r\n\r\n    \r\n      <div v-if=\"isFormVisible\" class=\"addmovieform\">\r\n      <h2>Add a New Movie</h2>\r\n       <form @submit.prevent=\"addMovie\">\r\n        <div>\r\n          <label for=\"movieTitle\">Title:</label>\r\n          <input type=\"text\" id=\"movieTitle\" v-model=\"newMovie.title\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieGenre\">Genre:</label>\r\n          <select id=\"movieGenre\" v-model=\"newMovie.genre\" required>\r\n            <option value=\"\" disabled selected>Select a genre</option>\r\n            <option value=\"Action\">Action</option>\r\n            <option value=\"Animation\">Animation</option>\r\n            <option value=\"Comedy\">Comedy</option>\r\n            <option value=\"Drama\">Drama</option>\r\n            <option value=\"Horror\">Horror</option>\r\n            <option value=\"Romance\">Romance</option>\r\n            <option value=\"Sci-Fi\">Sci-Fi</option>\r\n            <option value=\"Thriller\">Thriller</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieDate\">Date:</label>\r\n          <input type=\"date\" id=\"movieDate\" v-model=\"newMovie.date\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieScore\">Score:</label>\r\n          <input type=\"number\" id=\"movieScore\" v-model=\"newMovie.score\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for =\"details\">Other Details: </label>\r\n          <input type=\"text\" id=\"details\" v-model = \"newMovie.details\" required/>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"moviePoster\">Movie Poster:</label>\r\n          <input type=\"file\" id=\"moviePoster\" @change=\"handleImageUpload\" accept=\"image/*\" />\r\n        </div>\r\n        <div v-if=\"imagePreview\">\r\n          <h3>Image Preview:</h3>\r\n          <img :src=\"imagePreview\" alt=\"Image Preview\" style=\"max-width: 200px; margin-top: 10px;\"/>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn-form\">Add Movie</button>\r\n        </form>\r\n       </div>\r\n    \r\n    </div>\r\n\r\n    \r\n        <div class=\"search-filter\">\r\n          <input v-model=\"searched\" type=\"text\" placeholder=\"Search\" class=\"search-input\">\r\n          \r\n          <div class = \"filter-wrap\">\r\n          <button @click=\"toggleFilter\" class=\"filter-btn\">Filter by</button>\r\n          <div  v-if=\"isFilterVisible\" class=\"filter-container\">\r\n   \r\n  \r\n   <div class=\"filter-options\">\r\n     <label for=\"filterType\">Choose filter:</label>\r\n     <select id=\"filterType\" v-model=\"selectedFilter\">\r\n       <option value=\"\">None</option>\r\n       <option value=\"genre\">Genre</option>\r\n     </select>\r\n\r\n     <div v-if=\"selectedFilter === 'genre'\">\r\n     <label for=\"genreFilter\">Choose Genre:</label>\r\n     <select id=\"genreFilter\" v-model=\"selectedGenre\">\r\n       <option value=\"\">All</option>\r\n       <option value=\"Action\">Action</option>\r\n       <option value=\"Animation\">Animation</option>\r\n       <option value=\"Comedy\">Comedy</option>\r\n       <option value=\"Drama\">Drama</option>\r\n       <option value=\"Horror\">Horror</option>\r\n       <option value=\"Romance\">Romance</option>\r\n       <option value=\"Sci-Fi\">Sci-Fi</option>\r\n       <option value=\"Thriller\">Thriller</option>\r\n     </select>\r\n    </div>\r\n  </div>\r\n  </div>\r\n          </div>\r\n        </div>\r\n     \r\n\r\n     \r\n\r\n    <div v-if=\"filteredMovies.length >0\">\r\n     \r\n      <div class=\"movie-list\">\r\n        <div v-for=\"movie in filteredMovies\" :key=\"movie.id\" class=\"movie-item\" @click=\"showMovieDetails(movie)\">\r\n          \r\n          <img \r\n          :src=\"movie.posterURL\" \r\n          :alt=\"movie.title\"\r\n          class=\"movie-poster\"\r\n        />\r\n        <div class=\"movie-details\">\r\n          <strong>{{ movie.title }}</strong><br/>\r\n          \r\n        </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    \r\n\r\n    <div v-if=\"selectedMovie\" class=\"modal-overlay\" @click=\"closeModal\">\r\n      <div class=\"modal-content\" @click.stop>\r\n        <button class=\"close-button\" @click=\"closeModal\">&times;</button>\r\n        <div class=\"modal-body\">\r\n          <img :src=\"selectedMovie.posterURL\" :alt=\"selectedMovie.title\" class=\"modal-poster\"/>\r\n          <div class=\"modal-info\">\r\n\r\n            <h2 v-if=\"!isEditing\">{{ selectedMovie.title }}</h2>\r\n            <input v-else type=\"text\" v-model=\"editedMovie.title\" />\r\n\r\n           <p v-if=\"!isEditing\"><strong>Genre:</strong> {{ selectedMovie.genre }}</p>\r\n            <select v-else v-model=\"editedMovie.genre\">\r\n              <option value=\"Action\">Action</option>\r\n              <option value=\"Animation\">Animation</option>\r\n              <option value=\"Comedy\">Comedy</option>\r\n              <option value=\"Drama\">Drama</option>\r\n              <option value=\"Horror\">Horror</option>\r\n              <option value=\"Romance\">Romance</option>\r\n              <option value=\"Sci-Fi\">Sci-Fi</option>\r\n              <option value=\"Thriller\">Thriller</option>\r\n            </select>\r\n\r\n             <p v-if=\"!isEditing\"><strong>Date seen:</strong> {{ formatDate(selectedMovie.date) }}</p>\r\n            <input v-else type=\"date\" v-model=\"editedMovie.date\" />\r\n\r\n            <p v-if=\"!isEditing\"><strong>Score:</strong> {{ selectedMovie.score }}/10</p>\r\n            <input v-else type=\"number\" v-model=\"editedMovie.score\" />\r\n\r\n            <p v-if=\"!isEditing\"><strong>Other Details:</strong> {{ selectedMovie.details }}</p>\r\n            <input v-else type=\"text\" v-model=\"editedMovie.details\"/>\r\n\r\n            <button class=\"edit-button\" @click=\"editMovie\">Edit</button>\r\n            <button class=\"delete-button\" @click=\"deleteMovie\">Delete</button>\r\n            <button v-if=\"isEditing\" @click=\"saveMovieEdits\">Save</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n    \r\n  </template>\r\n\r\n<script>\r\nimport { signOut } from \"firebase/auth\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport {auth} from '../firebaseConfig';\r\nimport { getFirestore, collection, addDoc, serverTimestamp, updateDoc, doc} from \"firebase/firestore\";\r\nimport{ ref, uploadBytes, getDownloadURL} from \"firebase/storage\";\r\nimport { storage } from \"../firebaseConfig\";\r\n\r\nconst db = getFirestore();\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  data(){\r\n    return{\r\n      movies: [],\r\n      isFormVisible: false,\r\n      isEditing: false,\r\n      editedMovie: {},\r\n      newMovie:{\r\n        title: '',\r\n        genre: '',\r\n        date: '',\r\n        score: '',\r\n        details: '',\r\n        poster: null,\r\n      },\r\n      imagePreview: null,\r\n      username: null,\r\n      selectedMovie: null,\r\n      searched: '',\r\n      filteredMovies:[],\r\n      selectedGenre:'',\r\n      selectedFilter: '',\r\n      isFilterVisible: false,\r\n    };\r\n  },\r\n\r\n  created(){\r\n    this.displayMovies();\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        this.username = user.email; \r\n        this.fetchUserName(user.uid);\r\n        console.log(\"User logged in:\", user.email);\r\n      } else {\r\n        console.log(\"No user logged in\");\r\n        this.$router.push('/'); \r\n      }\r\n    });\r\n\r\n  },\r\n\r\n  methods: {\r\n  async signoutuser() {\r\n    console.log(\"Sign out button clicked\");\r\n    try {\r\n      await signOut(auth);\r\n      console.log(\"User signed out\");\r\n      this.$router.push('/');\r\n    } catch (error) {\r\n      console.error(\"Error signing out: \", error);\r\n    }\r\n  },\r\n  toggleForm(){\r\n    this.isFormVisible = !this.isFormVisible;\r\n  },\r\n  handleImageUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        \r\n        this.imagePreview = URL.createObjectURL(file);\r\n        this.newMovie.poster = file; \r\n        console.log('Poster uploaded:', this.newMovie.poster);\r\n      }else {\r\n        console.error('No file selected or invalid file.');\r\n      }\r\n    },\r\n\r\n    fetchUserName() {\r\n      const user = auth.currentUser;\r\n\r\n     if (user) {\r\n         fetch(`http://localhost:3000/user/${user.uid}`).then(response => response.json())\r\n            .then(data => {\r\n               console.log('User data fetched:', data);\r\n               this.username = data.firstName;\r\n             }).catch(error => {\r\n                console.error('Error fetching user:', error);\r\n                });\r\n  }\r\n    },\r\n\r\n  async addMovie(){\r\n    try {\r\n        if (!this.newMovie.poster || !(this.newMovie.poster instanceof File)) {\r\n          alert(\"Please upload a valid movie poster.\");\r\n          return;\r\n        }\r\n\r\n         //upload poster in storage\r\n        const posterRef = ref(storage, `posters/${this.newMovie.poster.name}`);\r\n        await uploadBytes(posterRef, this.newMovie.poster);\r\n        const posterURL = await getDownloadURL(posterRef);\r\n\r\n        const user = auth.currentUser;\r\n\r\n        await addDoc(collection(db, \"movies\"), {\r\n          movie:{\r\n            title: this.newMovie.title,\r\n            genre: this.newMovie.genre ,\r\n            date: this.newMovie.date,\r\n            score: parseFloat(this.newMovie.score),\r\n            details: this.newMovie.details\r\n          },\r\n          \r\n          posterURL,\r\n          user: {\r\n            uid: user.uid,\r\n            email: user.email,\r\n            \r\n          },\r\n          metadata: {\r\n            createdAt: serverTimestamp(),\r\n            updatedAt: serverTimestamp(),\r\n          },\r\n        });\r\n\r\n        console.log('Movie added successfully');\r\n        this.newMovie = { title: '', genre: '', date: '', score: '', details: '', poster: null };\r\n        this.imagePreview = null;\r\n        this.isFormVisible = false;\r\n        alert(\"Movie added sucessfully\");\r\n      } catch (error) {\r\n        console.error(\"Error adding movie: \", error);\r\n      }\r\n    \r\n    },\r\n\r\n    //modala\r\n    async displayMovies(){\r\n      try{\r\n        const response = await fetch('http://localhost:3000/movies');\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n       const movies = await response.json();\r\n       console.log(\"Filmele primite:\", movies);\r\n       \r\n       this.movies = movies.map(movie => ({\r\n        id: movie.id,\r\n        ...movie,\r\n      posterURL: movie.posterURL \r\n    }));\r\n\r\n    this.filteredMovies = this.movies;\r\n      } catch(error){\r\n        console.error(\"Error displaying movies: \", error);\r\n      }\r\n    },\r\n\r\n    showMovieDetails(movie){\r\n      this.selectedMovie = movie;\r\n    },\r\n\r\n    closeModal(){\r\n      this.selectedMovie = null;\r\n    },\r\n\r\n    formatDate(date){\r\n      if (!date) return 'No date available';\r\n      try {\r\n        const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r\n        //'en-GB' este pentru zi/luna/an\r\n        return new Date(date).toLocaleDateString('en-GB', options); \r\n    } catch (error) {\r\n      return 'Invalid Date';\r\n    }\r\n    },\r\n\r\n    editMovie(){\r\n      this.isEditing = true;\r\n      this.editedMovie = { ...this.selectedMovie };\r\n    },\r\n\r\n    async saveMovieEdits() {\r\n     try {\r\n      if (!this.selectedMovie.id) return;\r\n\r\n      const movieRef = doc(db, \"movies\", this.selectedMovie.id);\r\n      await updateDoc(movieRef, {\r\n        \"movie.title\": this.editedMovie.title,\r\n        \"movie.genre\": this.editedMovie.genre,\r\n        \"movie.date\": this.editedMovie.date,\r\n        \"movie.score\": this.editedMovie.score,\r\n        \"movie.details\": this.editedMovie.details,\r\n        \"metadata.updatedAt\": serverTimestamp(),\r\n      });\r\n\r\n      Object.assign(this.selectedMovie, this.editedMovie);\r\n      this.isEditing = false;\r\n         } catch (error) {\r\n      console.error(\"Error updating movie:\", error);\r\n        }\r\n      },\r\n\r\n    async deleteMovie() {\r\n      if (!this.selectedMovie || !this.selectedMovie.id) {\r\n          console.error(\"No movie selected or invalid movie ID\");\r\n          return;\r\n      }\r\n\r\n      try {\r\n\r\n        if (!confirm(\"Are you sure you want to delete this movie?\")) {\r\n        return;\r\n      }\r\n\r\n      console.log(\"Attempting to delete movie with ID:\", this.selectedMovie.id);\r\n\r\n      const response = await fetch(`http://localhost:3000/movies/${this.selectedMovie.id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      });\r\n\r\n      console.log(\"Delete response status:\", response.status);\r\n\r\n      const responseData = await response.json();\r\n\r\n      if (!response.ok) {\r\n        alert(responseData.error || \"Failed to delete movie\");\r\n        return;\r\n      }\r\n\r\n      const index = this.movies.findIndex(movie => movie.id === this.selectedMovie.id);\r\n      if (index > -1) {\r\n        this.movies.splice(index, 1);\r\n      }\r\n\r\n      this.closeModal();\r\n      console.log('Movie deleted successfully');\r\n      } catch (error) {\r\n        console.error(\"Error deleting movie:\", error);\r\n        alert(\"Failed to delete movie. Please try again.\");\r\n      }\r\n    },\r\n    \r\n    //search\r\n      searching(){\r\n        if(!this.searched){\r\n          this.filteredMovies = this.movies;\r\n        }else{\r\n          const lowerCase = this.searched.toLowerCase();\r\n          this.filteredMovies = this.movies.filter(movie=>\r\n            movie.title.toLowerCase().includes(lowerCase)\r\n          );\r\n        }\r\n      },\r\n\r\n      //filter\r\n\r\n      toggleFilter() {\r\n        this.isFilterVisible = !this.isFilterVisible;\r\n      },\r\n\r\n      applyFilter() {\r\n        if (!this.selectedFilter) {\r\n            this.filteredMovies = this.movies;\r\n        return;\r\n      }\r\n\r\n        if (this.selectedFilter === \"genre\" && this.selectedGenre) {\r\n            this.filteredMovies = this.movies.filter(movie => movie.genre === this.selectedGenre);\r\n        } else {\r\n        this.filteredMovies = this.movies;\r\n         }\r\n      }\r\n\r\n\r\n  },\r\n      watch: {\r\n       searched() {\r\n        this.searching();\r\n      },\r\n       selectedFilter() {\r\n        this.applyFilter();\r\n      },\r\n      selectedGenre() {\r\n        this.applyFilter();\r\n      }\r\n  },\r\n\r\n  //filter\r\n\r\n\r\n      \r\n\r\n};\r\n</script>\r\n\r\n<style src=\"../styles/HomePage.css\"></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}