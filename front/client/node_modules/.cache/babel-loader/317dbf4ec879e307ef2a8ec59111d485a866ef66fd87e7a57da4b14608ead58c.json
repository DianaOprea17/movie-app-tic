{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"filters\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"addmovieform\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  class: \"movie-list\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"src\", \"alt\"];\nconst _hoisted_10 = {\n  class: \"movie-details\"\n};\nconst _hoisted_11 = {\n  class: \"modal-body\"\n};\nconst _hoisted_12 = [\"src\", \"alt\"];\nconst _hoisted_13 = {\n  class: \"modal-info\"\n};\nconst _hoisted_14 = {\n  key: 0\n};\nconst _hoisted_15 = {\n  key: 2\n};\nconst _hoisted_16 = {\n  key: 4\n};\nconst _hoisted_17 = {\n  key: 6\n};\nconst _hoisted_18 = {\n  key: 8\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.username ? `${$data.username}'s Movie List` : \"Your Movie List\"), 1 /* TEXT */), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.signoutuser && $options.signoutuser(...args)),\n    class: \"btn-up\"\n  }, \" Sign out\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleForm && $options.toggleForm(...args)),\n    class: \"btn-up\"\n  }, \"Add New Movie\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.toggleFilter && _ctx.toggleFilter(...args)),\n    class: \"filter-button\"\n  }, _cache[23] || (_cache[23] = [_createElementVNode(\"i\", {\n    class: \"fas fa-filter\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Filter By \")])), _ctx.showFilters ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"label\", null, [_cache[25] || (_cache[25] = _createTextVNode(\"Genre: \")), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.selectedGenre = $event),\n    onChange: _cache[4] || (_cache[4] = (...args) => _ctx.applyFilter && _ctx.applyFilter(...args))\n  }, _cache[24] || (_cache[24] = [_createElementVNode(\"option\", {\n    value: \"\"\n  }, \"All\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"Drama\"\n  }, \"Drama\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"Action\"\n  }, \"Action\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"Comedy\"\n  }, \"Comedy\", -1 /* HOISTED */)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, _ctx.selectedGenre]])])])) : _createCommentVNode(\"v-if\", true), $data.isFormVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[35] || (_cache[35] = _createElementVNode(\"h2\", null, \"Add a New Movie\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[11] || (_cache[11] = _withModifiers((...args) => $options.addMovie && $options.addMovie(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[26] || (_cache[26] = _createElementVNode(\"label\", {\n    for: \"movieTitle\"\n  }, \"Title:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"movieTitle\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.newMovie.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.title]])]), _createElementVNode(\"div\", null, [_cache[28] || (_cache[28] = _createElementVNode(\"label\", {\n    for: \"movieGenre\"\n  }, \"Genre:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"movieGenre\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.newMovie.genre = $event),\n    required: \"\"\n  }, _cache[27] || (_cache[27] = [_createStaticVNode(\"<option value=\\\"\\\" disabled selected>Select a genre</option><option value=\\\"Action\\\">Action</option><option value=\\\"Animation\\\">Animation</option><option value=\\\"Comedy\\\">Comedy</option><option value=\\\"Drama\\\">Drama</option><option value=\\\"Horror\\\">Horror</option><option value=\\\"Romance\\\">Romance</option><option value=\\\"Sci-Fi\\\">Sci-Fi</option><option value=\\\"Thriller\\\">Thriller</option>\", 9)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.newMovie.genre]])]), _createElementVNode(\"div\", null, [_cache[29] || (_cache[29] = _createElementVNode(\"label\", {\n    for: \"movieDate\"\n  }, \"Date:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"movieDate\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.newMovie.date = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.date]])]), _createElementVNode(\"div\", null, [_cache[30] || (_cache[30] = _createElementVNode(\"label\", {\n    for: \"movieScore\"\n  }, \"Score:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"movieScore\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.newMovie.score = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.score]])]), _createElementVNode(\"div\", null, [_cache[31] || (_cache[31] = _createElementVNode(\"label\", {\n    for: \"details\"\n  }, \"Other Details: \", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"details\",\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.newMovie.details = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.details]])]), _createElementVNode(\"div\", null, [_cache[32] || (_cache[32] = _createElementVNode(\"label\", {\n    for: \"moviePoster\"\n  }, \"Movie Poster:\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"moviePoster\",\n    onChange: _cache[10] || (_cache[10] = (...args) => $options.handleImageUpload && $options.handleImageUpload(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), $data.imagePreview ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_cache[33] || (_cache[33] = _createElementVNode(\"h3\", null, \"Image Preview:\", -1 /* HOISTED */)), _createElementVNode(\"img\", {\n    src: $data.imagePreview,\n    alt: \"Image Preview\",\n    style: {\n      \"max-width\": \"200px\",\n      \"margin-top\": \"10px\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_5)])) : _createCommentVNode(\"v-if\", true), _cache[34] || (_cache[34] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn-form\"\n  }, \"Add Movie\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])) : _createCommentVNode(\"v-if\", true)]), $data.movies.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.movies, movie => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: movie.id,\n      class: \"movie-item\",\n      onClick: $event => $options.showMovieDetails(movie)\n    }, [_createElementVNode(\"img\", {\n      src: movie.posterURL,\n      alt: movie.title,\n      class: \"movie-poster\"\n    }, null, 8 /* PROPS */, _hoisted_9), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"strong\", null, _toDisplayString(movie.title), 1 /* TEXT */), _cache[36] || (_cache[36] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */))])], 8 /* PROPS */, _hoisted_8);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.selectedMovie ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"modal-overlay\",\n    onClick: _cache[22] || (_cache[22] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"modal-content\",\n    onClick: _cache[21] || (_cache[21] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_createElementVNode(\"button\", {\n    class: \"close-button\",\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"Ã—\"), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"img\", {\n    src: $data.selectedMovie.posterURL,\n    alt: $data.selectedMovie.title,\n    class: \"modal-poster\"\n  }, null, 8 /* PROPS */, _hoisted_12), _createElementVNode(\"div\", _hoisted_13, [!$data.isEditing ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_14, _toDisplayString($data.selectedMovie.title), 1 /* TEXT */)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.editedMovie.title = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.title]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_15, [_cache[37] || (_cache[37] = _createElementVNode(\"strong\", null, \"Genre:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedMovie.genre), 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 3,\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.editedMovie.genre = $event)\n  }, _cache[38] || (_cache[38] = [_createStaticVNode(\"<option value=\\\"Action\\\">Action</option><option value=\\\"Animation\\\">Animation</option><option value=\\\"Comedy\\\">Comedy</option><option value=\\\"Drama\\\">Drama</option><option value=\\\"Horror\\\">Horror</option><option value=\\\"Romance\\\">Romance</option><option value=\\\"Sci-Fi\\\">Sci-Fi</option><option value=\\\"Thriller\\\">Thriller</option>\", 8)]), 512 /* NEED_PATCH */)), [[_vModelSelect, $data.editedMovie.genre]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_16, [_cache[39] || (_cache[39] = _createElementVNode(\"strong\", null, \"Date seen:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.formatDate($data.selectedMovie.date)), 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 5,\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.editedMovie.date = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.date]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_17, [_cache[40] || (_cache[40] = _createElementVNode(\"strong\", null, \"Score:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedMovie.score) + \"/10\", 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 7,\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.editedMovie.score = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.score]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_18, [_cache[41] || (_cache[41] = _createElementVNode(\"strong\", null, \"Other Details:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedMovie.details), 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 9,\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $data.editedMovie.details = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.details]]), _createElementVNode(\"button\", {\n    class: \"edit-button\",\n    onClick: _cache[18] || (_cache[18] = (...args) => $options.editMovie && $options.editMovie(...args))\n  }, \"Edit\"), _createElementVNode(\"button\", {\n    class: \"delete-button\",\n    onClick: _cache[19] || (_cache[19] = (...args) => $options.deleteMovie && $options.deleteMovie(...args))\n  }, \"Delete\"), $data.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 10,\n    onClick: _cache[20] || (_cache[20] = (...args) => $options.saveMovieEdits && $options.saveMovieEdits(...args))\n  }, \"Save\")) : _createCommentVNode(\"v-if\", true)])])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_createElementVNode","_hoisted_1","_toDisplayString","$data","username","type","onClick","_cache","args","$options","signoutuser","toggleForm","_ctx","toggleFilter","_createTextVNode","showFilters","_hoisted_2","$event","selectedGenre","onChange","applyFilter","value","_createCommentVNode","isFormVisible","_hoisted_3","onSubmit","_withModifiers","addMovie","for","id","newMovie","title","required","genre","_createStaticVNode","date","score","details","handleImageUpload","accept","imagePreview","_hoisted_4","src","alt","style","_hoisted_5","movies","length","_hoisted_6","_hoisted_7","_Fragment","_renderList","movie","showMovieDetails","posterURL","_hoisted_9","_hoisted_10","_hoisted_8","selectedMovie","closeModal","_hoisted_11","_hoisted_12","_hoisted_13","isEditing","_hoisted_14","editedMovie","_hoisted_15","_hoisted_16","formatDate","_hoisted_17","_hoisted_18","editMovie","deleteMovie","saveMovieEdits"],"sources":["D:\\facultate\\mastrer\\movie-app-tic\\front\\client\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"container\">\r\n      <h1>{{ username ? `${username}'s Movie List` : \"Your Movie List\" }}</h1>\r\n      <button type = button v-on:click=\"signoutuser\" class=\"btn-up\"> Sign out</button>\r\n      <button @click=\"toggleForm\" class=\"btn-up\">Add New Movie</button>\r\n      <button @click=\"toggleFilter\" class=\"filter-button\">\r\n        <i class=\"fas fa-filter\"></i> Filter By\r\n      </button>\r\n\r\n      <div v-if=\"showFilters\" class=\"filters\">\r\n      <label>Genre:\r\n        <select v-model=\"selectedGenre\" @change=\"applyFilter\">\r\n          <option value=\"\">All</option>\r\n          <option value=\"Drama\">Drama</option>\r\n          <option value=\"Action\">Action</option>\r\n          <option value=\"Comedy\">Comedy</option>\r\n        </select>\r\n      </label>\r\n    </div>\r\n    \r\n      <div v-if=\"isFormVisible\" class=\"addmovieform\">\r\n      <h2>Add a New Movie</h2>\r\n       <form @submit.prevent=\"addMovie\">\r\n        <div>\r\n          <label for=\"movieTitle\">Title:</label>\r\n          <input type=\"text\" id=\"movieTitle\" v-model=\"newMovie.title\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieGenre\">Genre:</label>\r\n          <select id=\"movieGenre\" v-model=\"newMovie.genre\" required>\r\n            <option value=\"\" disabled selected>Select a genre</option>\r\n            <option value=\"Action\">Action</option>\r\n            <option value=\"Animation\">Animation</option>\r\n            <option value=\"Comedy\">Comedy</option>\r\n            <option value=\"Drama\">Drama</option>\r\n            <option value=\"Horror\">Horror</option>\r\n            <option value=\"Romance\">Romance</option>\r\n            <option value=\"Sci-Fi\">Sci-Fi</option>\r\n            <option value=\"Thriller\">Thriller</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieDate\">Date:</label>\r\n          <input type=\"date\" id=\"movieDate\" v-model=\"newMovie.date\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieScore\">Score:</label>\r\n          <input type=\"number\" id=\"movieScore\" v-model=\"newMovie.score\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for =\"details\">Other Details: </label>\r\n          <input type=\"text\" id=\"details\" v-model = \"newMovie.details\" required/>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"moviePoster\">Movie Poster:</label>\r\n          <input type=\"file\" id=\"moviePoster\" @change=\"handleImageUpload\" accept=\"image/*\" />\r\n        </div>\r\n        <div v-if=\"imagePreview\">\r\n          <h3>Image Preview:</h3>\r\n          <img :src=\"imagePreview\" alt=\"Image Preview\" style=\"max-width: 200px; margin-top: 10px;\"/>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn-form\">Add Movie</button>\r\n        </form>\r\n       </div>\r\n    \r\n    </div>\r\n\r\n    <div v-if=\"movies.length >0\">\r\n     \r\n      <div class=\"movie-list\">\r\n        <div v-for=\"movie in movies\" :key=\"movie.id\" class=\"movie-item\" @click=\"showMovieDetails(movie)\">\r\n          \r\n          <img \r\n          :src=\"movie.posterURL\" \r\n          :alt=\"movie.title\"\r\n          class=\"movie-poster\"\r\n        />\r\n        <div class=\"movie-details\">\r\n          <strong>{{ movie.title }}</strong><br/>\r\n          \r\n        </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"selectedMovie\" class=\"modal-overlay\" @click=\"closeModal\">\r\n      <div class=\"modal-content\" @click.stop>\r\n        <button class=\"close-button\" @click=\"closeModal\">&times;</button>\r\n        <div class=\"modal-body\">\r\n          <img :src=\"selectedMovie.posterURL\" :alt=\"selectedMovie.title\" class=\"modal-poster\"/>\r\n          <div class=\"modal-info\">\r\n\r\n            <h2 v-if=\"!isEditing\">{{ selectedMovie.title }}</h2>\r\n            <input v-else type=\"text\" v-model=\"editedMovie.title\" />\r\n\r\n           <p v-if=\"!isEditing\"><strong>Genre:</strong> {{ selectedMovie.genre }}</p>\r\n            <select v-else v-model=\"editedMovie.genre\">\r\n              <option value=\"Action\">Action</option>\r\n              <option value=\"Animation\">Animation</option>\r\n              <option value=\"Comedy\">Comedy</option>\r\n              <option value=\"Drama\">Drama</option>\r\n              <option value=\"Horror\">Horror</option>\r\n              <option value=\"Romance\">Romance</option>\r\n              <option value=\"Sci-Fi\">Sci-Fi</option>\r\n              <option value=\"Thriller\">Thriller</option>\r\n            </select>\r\n\r\n             <p v-if=\"!isEditing\"><strong>Date seen:</strong> {{ formatDate(selectedMovie.date) }}</p>\r\n            <input v-else type=\"date\" v-model=\"editedMovie.date\" />\r\n\r\n            <p v-if=\"!isEditing\"><strong>Score:</strong> {{ selectedMovie.score }}/10</p>\r\n            <input v-else type=\"number\" v-model=\"editedMovie.score\" />\r\n\r\n            <p v-if=\"!isEditing\"><strong>Other Details:</strong> {{ selectedMovie.details }}</p>\r\n            <input v-else type=\"text\" v-model=\"editedMovie.details\"/>\r\n\r\n            <button class=\"edit-button\" @click=\"editMovie\">Edit</button>\r\n            <button class=\"delete-button\" @click=\"deleteMovie\">Delete</button>\r\n            <button v-if=\"isEditing\" @click=\"saveMovieEdits\">Save</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n    \r\n  </template>\r\n\r\n<script>\r\nimport { signOut } from \"firebase/auth\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport {auth} from '../firebaseConfig';\r\nimport { getFirestore, collection, addDoc, serverTimestamp, updateDoc, doc} from \"firebase/firestore\";\r\nimport{ ref, uploadBytes, getDownloadURL} from \"firebase/storage\";\r\nimport { storage } from \"../firebaseConfig\";\r\n\r\nconst db = getFirestore();\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  data(){\r\n    return{\r\n      movies: [],\r\n      isFormVisible: false,\r\n      isEditing: false,\r\n      editedMovie: {},\r\n      newMovie:{\r\n        title: '',\r\n        genre: '',\r\n        date: '',\r\n        score: '',\r\n        details: '',\r\n        poster: null,\r\n      },\r\n      imagePreview: null,\r\n      username: null,\r\n      selectedMovie: null,\r\n    };\r\n  },\r\n\r\n  created(){\r\n    this.displayMovies();\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        this.username = user.email; \r\n        this.fetchUserName(user.uid);\r\n        console.log(\"User logged in:\", user.email);\r\n      } else {\r\n        console.log(\"No user logged in\");\r\n        this.$router.push('/'); \r\n      }\r\n    });\r\n\r\n  },\r\n\r\n  methods: {\r\n  async signoutuser() {\r\n    console.log(\"Sign out button clicked\");\r\n    try {\r\n      await signOut(auth);\r\n      console.log(\"User signed out\");\r\n      this.$router.push('/');\r\n    } catch (error) {\r\n      console.error(\"Error signing out: \", error);\r\n    }\r\n  },\r\n  toggleForm(){\r\n    this.isFormVisible = !this.isFormVisible;\r\n  },\r\n  handleImageUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        \r\n        this.imagePreview = URL.createObjectURL(file);\r\n        this.newMovie.poster = file; \r\n        console.log('Poster uploaded:', this.newMovie.poster);\r\n      }else {\r\n        console.error('No file selected or invalid file.');\r\n      }\r\n    },\r\n\r\n    fetchUserName() {\r\n      const user = auth.currentUser;\r\n\r\n     if (user) {\r\n         fetch(`http://localhost:3000/user/${user.uid}`).then(response => response.json())\r\n            .then(data => {\r\n               console.log('User data fetched:', data);\r\n               this.username = data.firstName;\r\n             }).catch(error => {\r\n                console.error('Error fetching user:', error);\r\n                });\r\n  }\r\n    },\r\n\r\n  async addMovie(){\r\n    try {\r\n        if (!this.newMovie.poster || !(this.newMovie.poster instanceof File)) {\r\n          alert(\"Please upload a valid movie poster.\");\r\n          return;\r\n        }\r\n\r\n         //upload poster in storage\r\n        const posterRef = ref(storage, `posters/${this.newMovie.poster.name}`);\r\n        await uploadBytes(posterRef, this.newMovie.poster);\r\n        const posterURL = await getDownloadURL(posterRef);\r\n\r\n        const user = auth.currentUser;\r\n\r\n        await addDoc(collection(db, \"movies\"), {\r\n          movie:{\r\n            title: this.newMovie.title,\r\n            genre: this.newMovie.genre ,\r\n            date: this.newMovie.date,\r\n            score: parseFloat(this.newMovie.score),\r\n            details: this.newMovie.details\r\n          },\r\n          \r\n          posterURL,\r\n          user: {\r\n            uid: user.uid,\r\n            email: user.email,\r\n            \r\n          },\r\n          metadata: {\r\n            createdAt: serverTimestamp(),\r\n            updatedAt: serverTimestamp(),\r\n          },\r\n        });\r\n\r\n        console.log('Movie added successfully');\r\n        this.newMovie = { title: '', genre: '', date: '', score: '', details: '', poster: null };\r\n        this.imagePreview = null;\r\n        this.isFormVisible = false;\r\n        alert(\"Movie added sucessfully\");\r\n      } catch (error) {\r\n        console.error(\"Error adding movie: \", error);\r\n      }\r\n    \r\n    },\r\n    async displayMovies(){\r\n      try{\r\n        const response = await fetch('http://localhost:3000/movies');\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n       const movies = await response.json();\r\n       console.log(\"Filmele primite de la API:\", movies);\r\n       \r\n       this.movies = movies.map(movie => ({\r\n        id: movie.id,\r\n        ...movie,\r\n      posterURL: movie.posterURL \r\n    }));\r\n      } catch(error){\r\n        console.error(\"Error displaying movies: \", error);\r\n      }\r\n    },\r\n\r\n    showMovieDetails(movie){\r\n      this.selectedMovie = movie;\r\n    },\r\n    closeModal(){\r\n      this.selectedMovie = null;\r\n    },\r\n    formatDate(date){\r\n      if (!date) return 'No date available';\r\n      try {\r\n        const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r\n        //'en-GB' este pentru zi/luna/an\r\n        return new Date(date).toLocaleDateString('en-GB', options); \r\n    } catch (error) {\r\n      return 'Invalid Date';\r\n    }\r\n    },\r\n\r\n    editMovie(){\r\n      this.isEditing = true;\r\n      this.editedMovie = { ...this.selectedMovie };\r\n    },\r\n\r\n    async saveMovieEdits() {\r\n     try {\r\n      if (!this.selectedMovie.id) return;\r\n\r\n      const movieRef = doc(db, \"movies\", this.selectedMovie.id);\r\n      await updateDoc(movieRef, {\r\n        \"movie.title\": this.editedMovie.title,\r\n        \"movie.genre\": this.editedMovie.genre,\r\n        \"movie.date\": this.editedMovie.date,\r\n        \"movie.score\": this.editedMovie.score,\r\n        \"movie.details\": this.editedMovie.details,\r\n        \"metadata.updatedAt\": serverTimestamp(),\r\n      });\r\n\r\n      Object.assign(this.selectedMovie, this.editedMovie);\r\n      this.isEditing = false;\r\n    } catch (error) {\r\n      console.error(\"Error updating movie:\", error);\r\n    }\r\n   },\r\n\r\n   async deleteMovie() {\r\n  if (!this.selectedMovie || !this.selectedMovie.id) {\r\n    console.error(\"No movie selected or invalid movie ID\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Show confirmation dialog\r\n    if (!confirm(\"Are you sure you want to delete this movie?\")) {\r\n      return;\r\n    }\r\n\r\n    console.log(\"Attempting to delete movie with ID:\", this.selectedMovie.id);\r\n\r\n    // Call the backend API to delete the movie\r\n    const response = await fetch(`http://localhost:3000/movies/${this.selectedMovie.id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n\r\n    console.log(\"Delete response status:\", response.status);\r\n\r\n    const responseData = await response.json();\r\n\r\n    if (!response.ok) {\r\n      // Display error message from server\r\n      alert(responseData.error || \"Failed to delete movie\");\r\n      return;\r\n    }\r\n\r\n    // Remove from local state\r\n    const index = this.movies.findIndex(movie => movie.id === this.selectedMovie.id);\r\n    if (index > -1) {\r\n      this.movies.splice(index, 1);\r\n    }\r\n\r\n    // Close the modal\r\n    this.closeModal();\r\n    console.log('Movie deleted successfully');\r\n  } catch (error) {\r\n    console.error(\"Error deleting movie:\", error);\r\n    alert(\"Failed to delete movie. Please try again.\");\r\n  }\r\n}\r\n  }\r\n};\r\n</script>\r\n\r\n<style src=\"../styles/HomePage.css\"></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}