{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"filter-container\"\n};\nconst _hoisted_3 = {\n  class: \"filter-wrapper\"\n};\nconst _hoisted_4 = {\n  class: \"filter-header\"\n};\nconst _hoisted_5 = {\n  class: \"filter-group\"\n};\nconst _hoisted_6 = {\n  class: \"filter-group\"\n};\nconst _hoisted_7 = {\n  class: \"filter-group\"\n};\nconst _hoisted_8 = {\n  class: \"date-range-inputs\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"addmovieform\"\n};\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = {\n  key: 0\n};\nconst _hoisted_13 = {\n  class: \"movie-list\"\n};\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = [\"src\", \"alt\"];\nconst _hoisted_16 = {\n  class: \"movie-details\"\n};\nconst _hoisted_17 = {\n  class: \"modal-body\"\n};\nconst _hoisted_18 = [\"src\", \"alt\"];\nconst _hoisted_19 = {\n  class: \"modal-info\"\n};\nconst _hoisted_20 = {\n  key: 0\n};\nconst _hoisted_21 = {\n  key: 2\n};\nconst _hoisted_22 = {\n  key: 4\n};\nconst _hoisted_23 = {\n  key: 6\n};\nconst _hoisted_24 = {\n  key: 8\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($data.username ? `${$data.username}'s Movie List` : \"Your Movie List\"), 1 /* TEXT */), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.signoutuser && $options.signoutuser(...args)),\n    class: \"btn-up\"\n  }, \" Sign out\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleForm && $options.toggleForm(...args)),\n    class: \"btn-up\"\n  }, \"Add New Movie\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.toggleFilter && $options.toggleFilter(...args)),\n    class: \"filter-button\"\n  }, _cache[30] || (_cache[30] = [_createElementVNode(\"i\", {\n    class: \"fas fa-filter\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" Filter By \")])), $data.showFilters ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[31] || (_cache[31] = _createElementVNode(\"h3\", null, \"Filter Movies\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.resetFilters && $options.resetFilters(...args)),\n    class: \"reset-btn\"\n  }, \"Reset\")]), _createElementVNode(\"div\", _hoisted_5, [_cache[33] || (_cache[33] = _createElementVNode(\"label\", {\n    for: \"genreFilter\"\n  }, \" Genre: \", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"genreFilter\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.selectedGenre = $event),\n    onChange: _cache[5] || (_cache[5] = (...args) => $options.applyFilter && $options.applyFilter(...args)),\n    class: \"filter-select\"\n  }, _cache[32] || (_cache[32] = [_createStaticVNode(\"<option value=\\\"\\\">All Genres</option><option value=\\\"Drama\\\">Drama</option><option value=\\\"Action\\\">Action</option><option value=\\\"Comedy\\\">Comedy</option><option value=\\\"Animation\\\">Animation</option><option value=\\\"Horror\\\">Horror</option><option value=\\\"Romance\\\">Romance</option><option value=\\\"Sci-Fi\\\">Sci-Fi</option><option value=\\\"Thriller\\\">Thriller</option>\", 9)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.selectedGenre]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[34] || (_cache[34] = _createElementVNode(\"label\", {\n    for: \"scoreFilter\"\n  }, \"Minimum Score:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"scoreFilter\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.minScore = $event),\n    onChange: _cache[7] || (_cache[7] = (...args) => $options.applyFilter && $options.applyFilter(...args)),\n    min: \"0\",\n    max: \"10\",\n    class: \"filter-input\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.minScore, void 0, {\n    number: true\n  }]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[35] || (_cache[35] = _createElementVNode(\"label\", {\n    for: \"dateFilter\"\n  }, \" Date:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"startDate\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.startDate = $event),\n    onChange: _cache[9] || (_cache[9] = (...args) => $options.applyFilter && $options.applyFilter(...args)),\n    class: \"filter-input\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.startDate]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"endDate\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.endDate = $event),\n    onChange: _cache[11] || (_cache[11] = (...args) => $options.applyFilter && $options.applyFilter(...args)),\n    class: \"filter-input\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.endDate]])])])])])) : _createCommentVNode(\"v-if\", true), $data.isFormVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_cache[45] || (_cache[45] = _createElementVNode(\"h2\", null, \"Add a New Movie\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[18] || (_cache[18] = _withModifiers((...args) => $options.addMovie && $options.addMovie(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[36] || (_cache[36] = _createElementVNode(\"label\", {\n    for: \"movieTitle\"\n  }, \"Title:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"movieTitle\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.newMovie.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.title]])]), _createElementVNode(\"div\", null, [_cache[38] || (_cache[38] = _createElementVNode(\"label\", {\n    for: \"movieGenre\"\n  }, \"Genre:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"movieGenre\",\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.newMovie.genre = $event),\n    required: \"\"\n  }, _cache[37] || (_cache[37] = [_createStaticVNode(\"<option value=\\\"\\\" disabled selected>Select a genre</option><option value=\\\"Action\\\">Action</option><option value=\\\"Animation\\\">Animation</option><option value=\\\"Comedy\\\">Comedy</option><option value=\\\"Drama\\\">Drama</option><option value=\\\"Horror\\\">Horror</option><option value=\\\"Romance\\\">Romance</option><option value=\\\"Sci-Fi\\\">Sci-Fi</option><option value=\\\"Thriller\\\">Thriller</option>\", 9)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.newMovie.genre]])]), _createElementVNode(\"div\", null, [_cache[39] || (_cache[39] = _createElementVNode(\"label\", {\n    for: \"movieDate\"\n  }, \"Date:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"movieDate\",\n    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.newMovie.date = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.date]])]), _createElementVNode(\"div\", null, [_cache[40] || (_cache[40] = _createElementVNode(\"label\", {\n    for: \"movieScore\"\n  }, \"Score:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"movieScore\",\n    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.newMovie.score = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.score]])]), _createElementVNode(\"div\", null, [_cache[41] || (_cache[41] = _createElementVNode(\"label\", {\n    for: \"details\"\n  }, \"Other Details: \", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"details\",\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.newMovie.details = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.details]])]), _createElementVNode(\"div\", null, [_cache[42] || (_cache[42] = _createElementVNode(\"label\", {\n    for: \"moviePoster\"\n  }, \"Movie Poster:\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"moviePoster\",\n    onChange: _cache[17] || (_cache[17] = (...args) => $options.handleImageUpload && $options.handleImageUpload(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), $data.imagePreview ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_cache[43] || (_cache[43] = _createElementVNode(\"h3\", null, \"Image Preview:\", -1 /* HOISTED */)), _createElementVNode(\"img\", {\n    src: $data.imagePreview,\n    alt: \"Image Preview\",\n    style: {\n      \"max-width\": \"200px\",\n      \"margin-top\": \"10px\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_11)])) : _createCommentVNode(\"v-if\", true), _cache[44] || (_cache[44] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn-form\"\n  }, \"Add Movie\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])) : _createCommentVNode(\"v-if\", true)]), $data.movies.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.movies, movie => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: movie.id,\n      class: \"movie-item\",\n      onClick: $event => $options.showMovieDetails(movie)\n    }, [_createElementVNode(\"img\", {\n      src: movie.posterURL,\n      alt: movie.title,\n      class: \"movie-poster\"\n    }, null, 8 /* PROPS */, _hoisted_15), _createElementVNode(\"div\", _hoisted_16, [_createElementVNode(\"strong\", null, _toDisplayString(movie.title), 1 /* TEXT */), _cache[46] || (_cache[46] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */))])], 8 /* PROPS */, _hoisted_14);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.selectedMovie ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"modal-overlay\",\n    onClick: _cache[29] || (_cache[29] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"modal-content\",\n    onClick: _cache[28] || (_cache[28] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_createElementVNode(\"button\", {\n    class: \"close-button\",\n    onClick: _cache[19] || (_cache[19] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"×\"), _createElementVNode(\"div\", _hoisted_17, [_createElementVNode(\"img\", {\n    src: $data.selectedMovie.posterURL,\n    alt: $data.selectedMovie.title,\n    class: \"modal-poster\"\n  }, null, 8 /* PROPS */, _hoisted_18), _createElementVNode(\"div\", _hoisted_19, [!$data.isEditing ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_20, _toDisplayString($data.selectedMovie.title), 1 /* TEXT */)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => $data.editedMovie.title = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.title]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_21, [_cache[47] || (_cache[47] = _createElementVNode(\"strong\", null, \"Genre:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedMovie.genre), 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 3,\n    \"onUpdate:modelValue\": _cache[21] || (_cache[21] = $event => $data.editedMovie.genre = $event)\n  }, _cache[48] || (_cache[48] = [_createStaticVNode(\"<option value=\\\"Action\\\">Action</option><option value=\\\"Animation\\\">Animation</option><option value=\\\"Comedy\\\">Comedy</option><option value=\\\"Drama\\\">Drama</option><option value=\\\"Horror\\\">Horror</option><option value=\\\"Romance\\\">Romance</option><option value=\\\"Sci-Fi\\\">Sci-Fi</option><option value=\\\"Thriller\\\">Thriller</option>\", 8)]), 512 /* NEED_PATCH */)), [[_vModelSelect, $data.editedMovie.genre]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_22, [_cache[49] || (_cache[49] = _createElementVNode(\"strong\", null, \"Date seen:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.formatDate($data.selectedMovie.date)), 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 5,\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => $data.editedMovie.date = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.date]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_23, [_cache[50] || (_cache[50] = _createElementVNode(\"strong\", null, \"Score:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedMovie.score) + \"/10\", 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 7,\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[23] || (_cache[23] = $event => $data.editedMovie.score = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.score]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_24, [_cache[51] || (_cache[51] = _createElementVNode(\"strong\", null, \"Other Details:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedMovie.details), 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 9,\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[24] || (_cache[24] = $event => $data.editedMovie.details = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.details]]), _createElementVNode(\"button\", {\n    class: \"edit-button\",\n    onClick: _cache[25] || (_cache[25] = (...args) => $options.editMovie && $options.editMovie(...args))\n  }, \"Edit\"), _createElementVNode(\"button\", {\n    class: \"delete-button\",\n    onClick: _cache[26] || (_cache[26] = (...args) => $options.deleteMovie && $options.deleteMovie(...args))\n  }, \"Delete\"), $data.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 10,\n    onClick: _cache[27] || (_cache[27] = (...args) => $options.saveMovieEdits && $options.saveMovieEdits(...args))\n  }, \"Save\")) : _createCommentVNode(\"v-if\", true)])])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_createElementVNode","_hoisted_1","_toDisplayString","$data","username","type","onClick","_cache","args","$options","signoutuser","toggleForm","toggleFilter","_createTextVNode","showFilters","_hoisted_2","_hoisted_3","_hoisted_4","resetFilters","_hoisted_5","for","id","$event","selectedGenre","onChange","applyFilter","_createStaticVNode","_hoisted_6","minScore","min","max","number","_hoisted_7","_hoisted_8","startDate","endDate","_createCommentVNode","isFormVisible","_hoisted_9","onSubmit","_withModifiers","addMovie","newMovie","title","required","genre","date","score","details","handleImageUpload","accept","imagePreview","_hoisted_10","src","alt","style","_hoisted_11","movies","length","_hoisted_12","_hoisted_13","_Fragment","_renderList","movie","showMovieDetails","posterURL","_hoisted_15","_hoisted_16","_hoisted_14","selectedMovie","closeModal","_hoisted_17","_hoisted_18","_hoisted_19","isEditing","_hoisted_20","editedMovie","_hoisted_21","_hoisted_22","formatDate","_hoisted_23","_hoisted_24","editMovie","deleteMovie","saveMovieEdits"],"sources":["D:\\facultate\\mastrer\\movie-app-tic\\front\\client\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"container\">\r\n      <h1>{{ username ? `${username}'s Movie List` : \"Your Movie List\" }}</h1>\r\n      <button type = button v-on:click=\"signoutuser\" class=\"btn-up\"> Sign out</button>\r\n      <button @click=\"toggleForm\" class=\"btn-up\">Add New Movie</button>\r\n      <button @click=\"toggleFilter\" class=\"filter-button\">\r\n        <i class=\"fas fa-filter\"></i> Filter By\r\n      </button>\r\n\r\n      <div v-if=\"showFilters\" class=\"filter-container\">\r\n        <div class=\"filter-wrapper\">\r\n          <div class = \"filter-header\"> \r\n            <h3>Filter Movies</h3>\r\n            <button @click=\"resetFilters\" class=\"reset-btn\">Reset</button>\r\n          </div>\r\n\r\n          <div class=\"filter-group\">\r\n            <label for=\"genreFilter\"> Genre: </label>\r\n            <select\r\n              id=\"genreFilter\" \r\n              v-model=\"selectedGenre\" \r\n              @change=\"applyFilter\" \r\n              class=\"filter-select\"\r\n            >\r\n              <option value=\"\">All Genres</option>\r\n              <option value=\"Drama\">Drama</option>\r\n              <option value=\"Action\">Action</option>\r\n              <option value=\"Comedy\">Comedy</option>\r\n              <option value=\"Animation\">Animation</option>\r\n              <option value=\"Horror\">Horror</option>\r\n              <option value=\"Romance\">Romance</option>\r\n              <option value=\"Sci-Fi\">Sci-Fi</option>\r\n              <option value=\"Thriller\">Thriller</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"filter-group\">\r\n            <label for=\"scoreFilter\">Minimum Score:</label>\r\n            <input \r\n              type=\"number\" \r\n              id=\"scoreFilter\" \r\n              v-model.number=\"minScore\" \r\n              @change=\"applyFilter\"\r\n              min=\"0\" \r\n              max=\"10\" \r\n              class=\"filter-input\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"filter-group\">\r\n            <label for=\"dateFilter\"> Date:</label>\r\n            <div class=\"date-range-inputs\">\r\n              <input \r\n                type=\"date\" \r\n                id=\"startDate\" \r\n                v-model=\"startDate\" \r\n                @change=\"applyFilter\"\r\n                class=\"filter-input\"\r\n              />\r\n              <input \r\n                type=\"date\" \r\n                id=\"endDate\" \r\n                v-model=\"endDate\" \r\n                @change=\"applyFilter\"\r\n                class=\"filter-input\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n    </div>\r\n    \r\n      <div v-if=\"isFormVisible\" class=\"addmovieform\">\r\n      <h2>Add a New Movie</h2>\r\n       <form @submit.prevent=\"addMovie\">\r\n        <div>\r\n          <label for=\"movieTitle\">Title:</label>\r\n          <input type=\"text\" id=\"movieTitle\" v-model=\"newMovie.title\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieGenre\">Genre:</label>\r\n          <select id=\"movieGenre\" v-model=\"newMovie.genre\" required>\r\n            <option value=\"\" disabled selected>Select a genre</option>\r\n            <option value=\"Action\">Action</option>\r\n            <option value=\"Animation\">Animation</option>\r\n            <option value=\"Comedy\">Comedy</option>\r\n            <option value=\"Drama\">Drama</option>\r\n            <option value=\"Horror\">Horror</option>\r\n            <option value=\"Romance\">Romance</option>\r\n            <option value=\"Sci-Fi\">Sci-Fi</option>\r\n            <option value=\"Thriller\">Thriller</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieDate\">Date:</label>\r\n          <input type=\"date\" id=\"movieDate\" v-model=\"newMovie.date\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieScore\">Score:</label>\r\n          <input type=\"number\" id=\"movieScore\" v-model=\"newMovie.score\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for =\"details\">Other Details: </label>\r\n          <input type=\"text\" id=\"details\" v-model = \"newMovie.details\" required/>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"moviePoster\">Movie Poster:</label>\r\n          <input type=\"file\" id=\"moviePoster\" @change=\"handleImageUpload\" accept=\"image/*\" />\r\n        </div>\r\n        <div v-if=\"imagePreview\">\r\n          <h3>Image Preview:</h3>\r\n          <img :src=\"imagePreview\" alt=\"Image Preview\" style=\"max-width: 200px; margin-top: 10px;\"/>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn-form\">Add Movie</button>\r\n        </form>\r\n       </div>\r\n    \r\n    </div>\r\n\r\n    <div v-if=\"movies.length >0\">\r\n     \r\n      <div class=\"movie-list\">\r\n        <div v-for=\"movie in movies\" :key=\"movie.id\" class=\"movie-item\" @click=\"showMovieDetails(movie)\">\r\n          \r\n          <img \r\n          :src=\"movie.posterURL\" \r\n          :alt=\"movie.title\"\r\n          class=\"movie-poster\"\r\n        />\r\n        <div class=\"movie-details\">\r\n          <strong>{{ movie.title }}</strong><br/>\r\n          \r\n        </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"selectedMovie\" class=\"modal-overlay\" @click=\"closeModal\">\r\n      <div class=\"modal-content\" @click.stop>\r\n        <button class=\"close-button\" @click=\"closeModal\">&times;</button>\r\n        <div class=\"modal-body\">\r\n          <img :src=\"selectedMovie.posterURL\" :alt=\"selectedMovie.title\" class=\"modal-poster\"/>\r\n          <div class=\"modal-info\">\r\n\r\n            <h2 v-if=\"!isEditing\">{{ selectedMovie.title }}</h2>\r\n            <input v-else type=\"text\" v-model=\"editedMovie.title\" />\r\n\r\n           <p v-if=\"!isEditing\"><strong>Genre:</strong> {{ selectedMovie.genre }}</p>\r\n            <select v-else v-model=\"editedMovie.genre\">\r\n              <option value=\"Action\">Action</option>\r\n              <option value=\"Animation\">Animation</option>\r\n              <option value=\"Comedy\">Comedy</option>\r\n              <option value=\"Drama\">Drama</option>\r\n              <option value=\"Horror\">Horror</option>\r\n              <option value=\"Romance\">Romance</option>\r\n              <option value=\"Sci-Fi\">Sci-Fi</option>\r\n              <option value=\"Thriller\">Thriller</option>\r\n            </select>\r\n\r\n             <p v-if=\"!isEditing\"><strong>Date seen:</strong> {{ formatDate(selectedMovie.date) }}</p>\r\n            <input v-else type=\"date\" v-model=\"editedMovie.date\" />\r\n\r\n            <p v-if=\"!isEditing\"><strong>Score:</strong> {{ selectedMovie.score }}/10</p>\r\n            <input v-else type=\"number\" v-model=\"editedMovie.score\" />\r\n\r\n            <p v-if=\"!isEditing\"><strong>Other Details:</strong> {{ selectedMovie.details }}</p>\r\n            <input v-else type=\"text\" v-model=\"editedMovie.details\"/>\r\n\r\n            <button class=\"edit-button\" @click=\"editMovie\">Edit</button>\r\n            <button class=\"delete-button\" @click=\"deleteMovie\">Delete</button>\r\n            <button v-if=\"isEditing\" @click=\"saveMovieEdits\">Save</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n    \r\n  </template>\r\n\r\n<script>\r\nimport { signOut } from \"firebase/auth\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport {auth} from '../firebaseConfig';\r\nimport { getFirestore, collection, addDoc, serverTimestamp, updateDoc, doc} from \"firebase/firestore\";\r\nimport{ ref, uploadBytes, getDownloadURL} from \"firebase/storage\";\r\nimport { storage } from \"../firebaseConfig\";\r\n\r\nconst db = getFirestore();\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  data(){\r\n    return{\r\n      movies: [],\r\n      isFormVisible: false,\r\n      isEditing: false,\r\n      editedMovie: {},\r\n      newMovie:{\r\n        title: '',\r\n        genre: '',\r\n        date: '',\r\n        score: '',\r\n        details: '',\r\n        poster: null,\r\n      },\r\n      imagePreview: null,\r\n      username: null,\r\n      selectedMovie: null,\r\n      showFilters: false,\r\n      selectedGenre: '',\r\n      minScore: 0,\r\n      startDate: '',\r\n      endDate: '',\r\n      filteredMovies: []\r\n    };\r\n  },\r\n\r\n  created(){\r\n    this.displayMovies();\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        this.username = user.email; \r\n        this.fetchUserName(user.uid);\r\n        console.log(\"User logged in:\", user.email);\r\n      } else {\r\n        console.log(\"No user logged in\");\r\n        this.$router.push('/'); \r\n      }\r\n    });\r\n\r\n  },\r\n\r\n  methods: {\r\n  async signoutuser() {\r\n    console.log(\"Sign out button clicked\");\r\n    try {\r\n      await signOut(auth);\r\n      console.log(\"User signed out\");\r\n      this.$router.push('/');\r\n    } catch (error) {\r\n      console.error(\"Error signing out: \", error);\r\n    }\r\n  },\r\n  toggleForm(){\r\n    this.isFormVisible = !this.isFormVisible;\r\n  },\r\n  handleImageUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        \r\n        this.imagePreview = URL.createObjectURL(file);\r\n        this.newMovie.poster = file; \r\n        console.log('Poster uploaded:', this.newMovie.poster);\r\n      }else {\r\n        console.error('No file selected or invalid file.');\r\n      }\r\n    },\r\n\r\n    fetchUserName() {\r\n      const user = auth.currentUser;\r\n\r\n     if (user) {\r\n         fetch(`http://localhost:3000/user/${user.uid}`).then(response => response.json())\r\n            .then(data => {\r\n               console.log('User data fetched:', data);\r\n               this.username = data.firstName;\r\n             }).catch(error => {\r\n                console.error('Error fetching user:', error);\r\n                });\r\n  }\r\n    },\r\n\r\n  async addMovie(){\r\n    try {\r\n        if (!this.newMovie.poster || !(this.newMovie.poster instanceof File)) {\r\n          alert(\"Please upload a valid movie poster.\");\r\n          return;\r\n        }\r\n\r\n         //upload poster in storage\r\n        const posterRef = ref(storage, `posters/${this.newMovie.poster.name}`);\r\n        await uploadBytes(posterRef, this.newMovie.poster);\r\n        const posterURL = await getDownloadURL(posterRef);\r\n\r\n        const user = auth.currentUser;\r\n\r\n        await addDoc(collection(db, \"movies\"), {\r\n          movie:{\r\n            title: this.newMovie.title,\r\n            genre: this.newMovie.genre ,\r\n            date: this.newMovie.date,\r\n            score: parseFloat(this.newMovie.score),\r\n            details: this.newMovie.details\r\n          },\r\n          \r\n          posterURL,\r\n          user: {\r\n            uid: user.uid,\r\n            email: user.email,\r\n            \r\n          },\r\n          metadata: {\r\n            createdAt: serverTimestamp(),\r\n            updatedAt: serverTimestamp(),\r\n          },\r\n        });\r\n\r\n        console.log('Movie added successfully');\r\n        this.newMovie = { title: '', genre: '', date: '', score: '', details: '', poster: null };\r\n        this.imagePreview = null;\r\n        this.isFormVisible = false;\r\n        alert(\"Movie added sucessfully\");\r\n      } catch (error) {\r\n        console.error(\"Error adding movie: \", error);\r\n      }\r\n    \r\n    },\r\n    async displayMovies(){\r\n      try{\r\n        const response = await fetch('http://localhost:3000/movies');\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n       const movies = await response.json();\r\n       console.log(\"Filmele primite de la API:\", movies);\r\n       \r\n       this.movies = movies.map(movie => ({\r\n        id: movie.id,\r\n        ...movie,\r\n      posterURL: movie.posterURL \r\n    }));\r\n      } catch(error){\r\n        console.error(\"Error displaying movies: \", error);\r\n      }\r\n    },\r\n\r\n    showMovieDetails(movie){\r\n      this.selectedMovie = movie;\r\n    },\r\n    closeModal(){\r\n      this.selectedMovie = null;\r\n    },\r\n    formatDate(date){\r\n      if (!date) return 'No date available';\r\n      try {\r\n        const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r\n        //'en-GB' este pentru zi/luna/an\r\n        return new Date(date).toLocaleDateString('en-GB', options); \r\n    } catch (error) {\r\n      return 'Invalid Date';\r\n    }\r\n    },\r\n\r\n    editMovie(){\r\n      this.isEditing = true;\r\n      this.editedMovie = { ...this.selectedMovie };\r\n    },\r\n\r\n    async saveMovieEdits() {\r\n     try {\r\n      if (!this.selectedMovie.id) return;\r\n\r\n      const movieRef = doc(db, \"movies\", this.selectedMovie.id);\r\n      await updateDoc(movieRef, {\r\n        \"movie.title\": this.editedMovie.title,\r\n        \"movie.genre\": this.editedMovie.genre,\r\n        \"movie.date\": this.editedMovie.date,\r\n        \"movie.score\": this.editedMovie.score,\r\n        \"movie.details\": this.editedMovie.details,\r\n        \"metadata.updatedAt\": serverTimestamp(),\r\n      });\r\n\r\n      Object.assign(this.selectedMovie, this.editedMovie);\r\n      this.isEditing = false;\r\n         } catch (error) {\r\n      console.error(\"Error updating movie:\", error);\r\n        }\r\n      },\r\n\r\n      async deleteMovie() {\r\n      if (!this.selectedMovie || !this.selectedMovie.id) {\r\n          console.error(\"No movie selected or invalid movie ID\");\r\n          return;\r\n      }\r\n\r\n      try {\r\n\r\n        if (!confirm(\"Are you sure you want to delete this movie?\")) {\r\n        return;\r\n      }\r\n\r\n      console.log(\"Attempting to delete movie with ID:\", this.selectedMovie.id);\r\n\r\n      const response = await fetch(`http://localhost:3000/movies/${this.selectedMovie.id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      });\r\n\r\n      console.log(\"Delete response status:\", response.status);\r\n\r\n      const responseData = await response.json();\r\n\r\n      if (!response.ok) {\r\n        alert(responseData.error || \"Failed to delete movie\");\r\n        return;\r\n      }\r\n\r\n      const index = this.movies.findIndex(movie => movie.id === this.selectedMovie.id);\r\n      if (index > -1) {\r\n        this.movies.splice(index, 1);\r\n      }\r\n\r\n      // Close the modal\r\n      this.closeModal();\r\n      console.log('Movie deleted successfully');\r\n      } catch (error) {\r\n        console.error(\"Error deleting movie:\", error);\r\n        alert(\"Failed to delete movie. Please try again.\");\r\n      }\r\n    },\r\n\r\n    toggleFilter() {\r\n      this.showFilters = !this.showFilters;\r\n    },\r\n\r\n    applyFilter() {\r\n      this.filteredMovies = this.movies.filter(movie => {\r\n        const genreMatch = !this.selectedGenre || movie.genre === this.selectedGenre;\r\n        const scoreMatch = movie.score >= this.minScore;\r\n        const dateMatch = this.checkDateRange(movie.date);\r\n        return genreMatch && scoreMatch && dateMatch;\r\n      });\r\n    },\r\n\r\n    checkDateRange(movieDate) {\r\n      if (!this.startDate && !this.endDate) return true;\r\n      const movieTimestamp = new Date(movieDate).getTime();\r\n      const startTimestamp = this.startDate ? new Date(this.startDate).getTime() : 0;\r\n      const endTimestamp = this.endDate ? new Date(this.endDate).getTime() : Infinity;\r\n      return movieTimestamp >= startTimestamp && movieTimestamp <= endTimestamp;\r\n    },\r\n\r\n    resetFilters() {\r\n      this.selectedGenre = '';\r\n      this.minScore = 0;\r\n      this.startDate = '';\r\n      this.endDate = '';\r\n      this.filteredMovies = this.movies;\r\n    },\r\n    computed: {\r\n    displayMovies() {\r\n      return this.filteredMovies.length > 0 ? this.filteredMovies : this.movies;\r\n    }\r\n  }\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style src=\"../styles/HomePage.css\"></style>"],"mappings":";;EAEWA,KAAK,EAAC;AAAW;;EAF5BC,GAAA;EAU8BD,KAAK,EAAC;;;EACvBA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAG;AAAe;;EAKvBA,KAAK,EAAC;AAAc;;EAoBpBA,KAAK,EAAC;AAAc;;EAapBA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAmB;;EApD1CC,GAAA;EAyEgCD,KAAK,EAAC;;;EAzEtCC,GAAA;AAAA;oBAAA;;EAAAA,GAAA;AAAA;;EAgIWD,KAAK,EAAC;AAAY;oBAhI7B;oBAAA;;EAwIaA,KAAK,EAAC;AAAe;;EAYrBA,KAAK,EAAC;AAAY;oBApJ/B;;EAsJeA,KAAK,EAAC;AAAY;;EAtJjCC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAuLI,cAtLFC,mBAAA,CA0HI,OA1HJC,UA0HI,GAzHJD,mBAAA,CAAwE,YAAAE,gBAAA,CAAjEC,KAAA,CAAAC,QAAQ,MAAMD,KAAA,CAAAC,QAAQ,qDAC7BJ,mBAAA,CAAgF;IAAxEK,IAAI,EAAG,QAAM;IAAMC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAEX,KAAK,EAAC;KAAS,WAAS,GACvEG,mBAAA,CAAiE;IAAxDM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,UAAA,IAAAF,QAAA,CAAAE,UAAA,IAAAH,IAAA,CAAU;IAAEX,KAAK,EAAC;KAAS,eAAa,GACxDG,mBAAA,CAES;IAFAM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,YAAA,IAAAH,QAAA,CAAAG,YAAA,IAAAJ,IAAA,CAAY;IAAEX,KAAK,EAAC;kCAClCG,mBAAA,CAA6B;IAA1BH,KAAK,EAAC;EAAe,4BAPhCgB,gBAAA,CAOqC,aAC/B,E,IAEWV,KAAA,CAAAW,WAAW,I,cAAtBf,mBAAA,CA6DI,OA7DJgB,UA6DI,GA5DFf,mBAAA,CA0DM,OA1DNgB,UA0DM,GAzDJhB,mBAAA,CAGM,OAHNiB,UAGM,G,4BAFJjB,mBAAA,CAAsB,YAAlB,eAAa,sBACjBA,mBAAA,CAA8D;IAArDM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAS,YAAA,IAAAT,QAAA,CAAAS,YAAA,IAAAV,IAAA,CAAY;IAAEX,KAAK,EAAC;KAAY,OAAK,E,GAGvDG,mBAAA,CAkBM,OAlBNmB,UAkBM,G,4BAjBJnB,mBAAA,CAAyC;IAAlCoB,GAAG,EAAC;EAAa,GAAC,UAAQ,sB,gBACjCpB,mBAAA,CAeS;IAdPqB,EAAE,EAAC,aAAa;IApB9B,uBAAAd,MAAA,QAAAA,MAAA,MAAAe,MAAA,IAqBuBnB,KAAA,CAAAoB,aAAa,GAAAD,MAAA;IACrBE,QAAM,EAAAjB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAgB,WAAA,IAAAhB,QAAA,CAAAgB,WAAA,IAAAjB,IAAA,CAAW;IACpBX,KAAK,EAAC;kCAvBpB6B,kBAAA,wX,2DAqBuBvB,KAAA,CAAAoB,aAAa,E,KAgB1BvB,mBAAA,CAWM,OAXN2B,UAWM,G,4BAVJ3B,mBAAA,CAA+C;IAAxCoB,GAAG,EAAC;EAAa,GAAC,gBAAc,sB,gBACvCpB,mBAAA,CAQE;IAPAK,IAAI,EAAC,QAAQ;IACbgB,EAAE,EAAC,aAAa;IAzC9B,uBAAAd,MAAA,QAAAA,MAAA,MAAAe,MAAA,IA0C8BnB,KAAA,CAAAyB,QAAQ,GAAAN,MAAA;IACvBE,QAAM,EAAAjB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAgB,WAAA,IAAAhB,QAAA,CAAAgB,WAAA,IAAAjB,IAAA,CAAW;IACpBqB,GAAG,EAAC,GAAG;IACPC,GAAG,EAAC,IAAI;IACRjC,KAAK,EAAC;iEAJUM,KAAA,CAAAyB,QAAQ,E;IAAhBG,MAAM,EAAd;EAAyB,E,MAQ7B/B,mBAAA,CAkBM,OAlBNgC,UAkBM,G,4BAjBJhC,mBAAA,CAAsC;IAA/BoB,GAAG,EAAC;EAAY,GAAC,QAAM,sBAC9BpB,mBAAA,CAeM,OAfNiC,UAeM,G,gBAdJjC,mBAAA,CAME;IALAK,IAAI,EAAC,MAAM;IACXgB,EAAE,EAAC,WAAW;IAvD9B,uBAAAd,MAAA,QAAAA,MAAA,MAAAe,MAAA,IAwDyBnB,KAAA,CAAA+B,SAAS,GAAAZ,MAAA;IACjBE,QAAM,EAAAjB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAgB,WAAA,IAAAhB,QAAA,CAAAgB,WAAA,IAAAjB,IAAA,CAAW;IACpBX,KAAK,EAAC;iEAFGM,KAAA,CAAA+B,SAAS,E,mBAIpBlC,mBAAA,CAME;IALAK,IAAI,EAAC,MAAM;IACXgB,EAAE,EAAC,SAAS;IA9D5B,uBAAAd,MAAA,SAAAA,MAAA,OAAAe,MAAA,IA+DyBnB,KAAA,CAAAgC,OAAO,GAAAb,MAAA;IACfE,QAAM,EAAAjB,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEC,QAAA,CAAAgB,WAAA,IAAAhB,QAAA,CAAAgB,WAAA,IAAAjB,IAAA,CAAW;IACpBX,KAAK,EAAC;iEAFGM,KAAA,CAAAgC,OAAO,E,aA/DhCC,mBAAA,gBAyEiBjC,KAAA,CAAAkC,aAAa,I,cAAxBtC,mBAAA,CAiDO,OAjDPuC,UAiDO,G,4BAhDPtC,mBAAA,CAAwB,YAApB,iBAAe,sBAClBA,mBAAA,CA8CQ;IA9CDuC,QAAM,EAAAhC,MAAA,SAAAA,MAAA,OA3EpBiC,cAAA,KAAAhC,IAAA,KA2E8BC,QAAA,CAAAgC,QAAA,IAAAhC,QAAA,CAAAgC,QAAA,IAAAjC,IAAA,CAAQ;MAC9BR,mBAAA,CAGM,c,4BAFJA,mBAAA,CAAsC;IAA/BoB,GAAG,EAAC;EAAY,GAAC,QAAM,sB,gBAC9BpB,mBAAA,CAAuE;IAAhEK,IAAI,EAAC,MAAM;IAACgB,EAAE,EAAC,YAAY;IA9E5C,uBAAAd,MAAA,SAAAA,MAAA,OAAAe,MAAA,IA8EsDnB,KAAA,CAAAuC,QAAQ,CAACC,KAAK,GAAArB,MAAA;IAAEsB,QAAQ,EAAR;iDAAhBzC,KAAA,CAAAuC,QAAQ,CAACC,KAAK,E,KAG5D3C,mBAAA,CAaM,c,4BAZJA,mBAAA,CAAsC;IAA/BoB,GAAG,EAAC;EAAY,GAAC,QAAM,sB,gBAC9BpB,mBAAA,CAUS;IAVDqB,EAAE,EAAC,YAAY;IAnFjC,uBAAAd,MAAA,SAAAA,MAAA,OAAAe,MAAA,IAmF2CnB,KAAA,CAAAuC,QAAQ,CAACG,KAAK,GAAAvB,MAAA;IAAEsB,QAAQ,EAAR;kCAnF3DlB,kBAAA,8Y,2CAmF2CvB,KAAA,CAAAuC,QAAQ,CAACG,KAAK,E,KAajD7C,mBAAA,CAGM,c,4BAFJA,mBAAA,CAAoC;IAA7BoB,GAAG,EAAC;EAAW,GAAC,OAAK,sB,gBAC5BpB,mBAAA,CAAqE;IAA9DK,IAAI,EAAC,MAAM;IAACgB,EAAE,EAAC,WAAW;IAlG3C,uBAAAd,MAAA,SAAAA,MAAA,OAAAe,MAAA,IAkGqDnB,KAAA,CAAAuC,QAAQ,CAACI,IAAI,GAAAxB,MAAA;IAAEsB,QAAQ,EAAR;iDAAfzC,KAAA,CAAAuC,QAAQ,CAACI,IAAI,E,KAG1D9C,mBAAA,CAGM,c,4BAFJA,mBAAA,CAAsC;IAA/BoB,GAAG,EAAC;EAAY,GAAC,QAAM,sB,gBAC9BpB,mBAAA,CAAyE;IAAlEK,IAAI,EAAC,QAAQ;IAACgB,EAAE,EAAC,YAAY;IAvG9C,uBAAAd,MAAA,SAAAA,MAAA,OAAAe,MAAA,IAuGwDnB,KAAA,CAAAuC,QAAQ,CAACK,KAAK,GAAAzB,MAAA;IAAEsB,QAAQ,EAAR;iDAAhBzC,KAAA,CAAAuC,QAAQ,CAACK,KAAK,E,KAG9D/C,mBAAA,CAGM,c,4BAFJA,mBAAA,CAA6C;IAAtCoB,GAAG,EAAE;EAAS,GAAC,iBAAe,sB,gBACrCpB,mBAAA,CAAuE;IAAhEK,IAAI,EAAC,MAAM;IAACgB,EAAE,EAAC,SAAS;IA5GzC,uBAAAd,MAAA,SAAAA,MAAA,OAAAe,MAAA,IA4GqDnB,KAAA,CAAAuC,QAAQ,CAACM,OAAO,GAAA1B,MAAA;IAAEsB,QAAQ,EAAR;iDAAlBzC,KAAA,CAAAuC,QAAQ,CAACM,OAAO,E,KAG7DhD,mBAAA,CAGM,c,4BAFJA,mBAAA,CAA8C;IAAvCoB,GAAG,EAAC;EAAa,GAAC,eAAa,sBACtCpB,mBAAA,CAAmF;IAA5EK,IAAI,EAAC,MAAM;IAACgB,EAAE,EAAC,aAAa;IAAEG,QAAM,EAAAjB,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEC,QAAA,CAAAwC,iBAAA,IAAAxC,QAAA,CAAAwC,iBAAA,IAAAzC,IAAA,CAAiB;IAAE0C,MAAM,EAAC;uCAE9D/C,KAAA,CAAAgD,YAAY,I,cAAvBpD,mBAAA,CAGM,OAtHdqD,WAAA,G,4BAoHUpD,mBAAA,CAAuB,YAAnB,gBAAc,sBAClBA,mBAAA,CAA0F;IAApFqD,GAAG,EAAElD,KAAA,CAAAgD,YAAY;IAAEG,GAAG,EAAC,eAAe;IAACC,KAA2C,EAA3C;MAAA;MAAA;IAAA;0BArHvDC,WAAA,E,KAAApB,mBAAA,gB,4BAwHQpC,mBAAA,CAAyD;IAAjDK,IAAI,EAAC,QAAQ;IAACR,KAAK,EAAC;KAAW,WAAS,qB,gCAxHxDuC,mBAAA,e,GA8HejC,KAAA,CAAAsD,MAAM,CAACC,MAAM,Q,cAAxB3D,mBAAA,CAiBM,OA/IV4D,WAAA,GAgIM3D,mBAAA,CAcM,OAdN4D,WAcM,I,kBAbJ7D,mBAAA,CAWM8D,SAAA,QA5IdC,WAAA,CAiI6B3D,KAAA,CAAAsD,MAAM,EAAfM,KAAK;yBAAjBhE,mBAAA,CAWM;MAXwBD,GAAG,EAAEiE,KAAK,CAAC1C,EAAE;MAAExB,KAAK,EAAC,YAAY;MAAES,OAAK,EAAAgB,MAAA,IAAEb,QAAA,CAAAuD,gBAAgB,CAACD,KAAK;QAE5F/D,mBAAA,CAIA;MAHCqD,GAAG,EAAEU,KAAK,CAACE,SAAS;MACpBX,GAAG,EAAES,KAAK,CAACpB,KAAK;MACjB9C,KAAK,EAAC;4BAtIhBqE,WAAA,GAwIQlE,mBAAA,CAGM,OAHNmE,WAGM,GAFJnE,mBAAA,CAAkC,gBAAAE,gBAAA,CAAvB6D,KAAK,CAACpB,KAAK,kB,4BAAY3C,mBAAA,CAAK,qC,mBAzIjDoE,WAAA;wCAAAhC,mBAAA,gBAiJejC,KAAA,CAAAkE,aAAa,I,cAAxBtE,mBAAA,CAqCM;IAtLVD,GAAA;IAiJ8BD,KAAK,EAAC,eAAe;IAAES,OAAK,EAAAC,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEC,QAAA,CAAA6D,UAAA,IAAA7D,QAAA,CAAA6D,UAAA,IAAA9D,IAAA,CAAU;MAChER,mBAAA,CAmCM;IAnCDH,KAAK,EAAC,eAAe;IAAES,OAAK,EAAAC,MAAA,SAAAA,MAAA,OAlJvCiC,cAAA,CAkJiC,QAAW;MACpCxC,mBAAA,CAAiE;IAAzDH,KAAK,EAAC,cAAc;IAAES,OAAK,EAAAC,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEC,QAAA,CAAA6D,UAAA,IAAA7D,QAAA,CAAA6D,UAAA,IAAA9D,IAAA,CAAU;KAAE,GAAO,GACxDR,mBAAA,CAgCM,OAhCNuE,WAgCM,GA/BJvE,mBAAA,CAAqF;IAA/EqD,GAAG,EAAElD,KAAA,CAAAkE,aAAa,CAACJ,SAAS;IAAGX,GAAG,EAAEnD,KAAA,CAAAkE,aAAa,CAAC1B,KAAK;IAAE9C,KAAK,EAAC;0BArJ/E2E,WAAA,GAsJUxE,mBAAA,CA6BM,OA7BNyE,WA6BM,G,CA3BOtE,KAAA,CAAAuE,SAAS,I,cAApB3E,mBAAA,CAAoD,MAxJhE4E,WAAA,EAAAzE,gBAAA,CAwJqCC,KAAA,CAAAkE,aAAa,CAAC1B,KAAK,oB,+BAC5C5C,mBAAA,CAAwD;IAzJpED,GAAA;IAyJ0BO,IAAI,EAAC,MAAM;IAzJrC,uBAAAE,MAAA,SAAAA,MAAA,OAAAe,MAAA,IAyJ+CnB,KAAA,CAAAyE,WAAW,CAACjC,KAAK,GAAArB,MAAA;kDAAjBnB,KAAA,CAAAyE,WAAW,CAACjC,KAAK,E,IAE3CxC,KAAA,CAAAuE,SAAS,I,cAAnB3E,mBAAA,CAA0E,KA3JrF8E,WAAA,G,4BA2JgC7E,mBAAA,CAAuB,gBAAf,QAAM,sBA3J9Ca,gBAAA,CA2JuD,GAAC,GAAAX,gBAAA,CAAGC,KAAA,CAAAkE,aAAa,CAACxB,KAAK,iB,oCAClE9C,mBAAA,CASS;IArKrBD,GAAA;IAAA,uBAAAS,MAAA,SAAAA,MAAA,OAAAe,MAAA,IA4JoCnB,KAAA,CAAAyE,WAAW,CAAC/B,KAAK,GAAAvB,MAAA;kCA5JrDI,kBAAA,kV,4CA4JoCvB,KAAA,CAAAyE,WAAW,CAAC/B,KAAK,E,IAW9B1C,KAAA,CAAAuE,SAAS,I,cAAnB3E,mBAAA,CAAyF,KAvKtG+E,WAAA,G,4BAuKkC9E,mBAAA,CAA2B,gBAAnB,YAAU,sBAvKpDa,gBAAA,CAuK6D,GAAC,GAAAX,gBAAA,CAAGO,QAAA,CAAAsE,UAAU,CAAC5E,KAAA,CAAAkE,aAAa,CAACvB,IAAI,kB,oCAClF/C,mBAAA,CAAuD;IAxKnED,GAAA;IAwK0BO,IAAI,EAAC,MAAM;IAxKrC,uBAAAE,MAAA,SAAAA,MAAA,OAAAe,MAAA,IAwK+CnB,KAAA,CAAAyE,WAAW,CAAC9B,IAAI,GAAAxB,MAAA;kDAAhBnB,KAAA,CAAAyE,WAAW,CAAC9B,IAAI,E,IAEzC3C,KAAA,CAAAuE,SAAS,I,cAAnB3E,mBAAA,CAA6E,KA1KzFiF,WAAA,G,4BA0KiChF,mBAAA,CAAuB,gBAAf,QAAM,sBA1K/Ca,gBAAA,CA0KwD,GAAC,GAAAX,gBAAA,CAAGC,KAAA,CAAAkE,aAAa,CAACtB,KAAK,IAAG,KAAG,gB,oCACzEhD,mBAAA,CAA0D;IA3KtED,GAAA;IA2K0BO,IAAI,EAAC,QAAQ;IA3KvC,uBAAAE,MAAA,SAAAA,MAAA,OAAAe,MAAA,IA2KiDnB,KAAA,CAAAyE,WAAW,CAAC7B,KAAK,GAAAzB,MAAA;kDAAjBnB,KAAA,CAAAyE,WAAW,CAAC7B,KAAK,E,IAE5C5C,KAAA,CAAAuE,SAAS,I,cAAnB3E,mBAAA,CAAoF,KA7KhGkF,WAAA,G,4BA6KiCjF,mBAAA,CAA+B,gBAAvB,gBAAc,sBA7KvDa,gBAAA,CA6KgE,GAAC,GAAAX,gBAAA,CAAGC,KAAA,CAAAkE,aAAa,CAACrB,OAAO,iB,oCAC7EjD,mBAAA,CAAyD;IA9KrED,GAAA;IA8K0BO,IAAI,EAAC,MAAM;IA9KrC,uBAAAE,MAAA,SAAAA,MAAA,OAAAe,MAAA,IA8K+CnB,KAAA,CAAAyE,WAAW,CAAC5B,OAAO,GAAA1B,MAAA;kDAAnBnB,KAAA,CAAAyE,WAAW,CAAC5B,OAAO,E,GAEtDhD,mBAAA,CAA4D;IAApDH,KAAK,EAAC,aAAa;IAAES,OAAK,EAAAC,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEC,QAAA,CAAAyE,SAAA,IAAAzE,QAAA,CAAAyE,SAAA,IAAA1E,IAAA,CAAS;KAAE,MAAI,GACnDR,mBAAA,CAAkE;IAA1DH,KAAK,EAAC,eAAe;IAAES,OAAK,EAAAC,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEC,QAAA,CAAA0E,WAAA,IAAA1E,QAAA,CAAA0E,WAAA,IAAA3E,IAAA,CAAW;KAAE,QAAM,GAC3CL,KAAA,CAAAuE,SAAS,I,cAAvB3E,mBAAA,CAA8D;IAlL1ED,GAAA;IAkLsCQ,OAAK,EAAAC,MAAA,SAAAA,MAAA,WAAAC,IAAA,KAAEC,QAAA,CAAA2E,cAAA,IAAA3E,QAAA,CAAA2E,cAAA,IAAA5E,IAAA,CAAc;KAAE,MAAI,KAlLjE4B,mBAAA,e,WAAAA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}