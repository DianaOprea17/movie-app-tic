{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { signInWithEmailAndPassword, getIdToken } from 'firebase/auth';\nimport { auth } from '@/firebaseConfig';\nimport logo from '../assets/logoextinsalb.png';\nexport default {\n  data() {\n    return {\n      logo,\n      email: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        //autentifica utilizatorul \n        await signInWithEmailAndPassword(auth, this.email, this.password);\n        console.log('User logged in');\n\n        //obtine token-ul ID de la firebase\n        const token = await getIdToken(auth.currentUser);\n\n        //trimite token-ul la backend pentru autentificare\n        const response = await fetch('http://localhost:3000/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            email: this.email,\n            password: this.password\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          console.log('Login successful:', data);\n          this.$router.push('/home');\n        } else {\n          this.errorMessage = data.message || 'Login failed';\n        }\n      } catch (error) {\n        console.error(\"Error details:\", error);\n        if (error.code === 'auth/invalid-credential') {\n          this.errorMessage = 'Invalid user. Please check you email and password again.';\n        } else {\n          this.errorMessage = 'Error logging in. Please try again.';\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["signInWithEmailAndPassword","getIdToken","auth","logo","data","email","password","errorMessage","methods","login","console","log","token","currentUser","response","fetch","method","headers","body","JSON","stringify","json","ok","$router","push","message","error","code"],"sources":["D:\\facultate\\mastrer\\movie-app-tic\\front\\client\\src\\components\\LoginUser.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n\r\n      <div class=\"left-side\">\r\n      <img :src=logo alt=\"Logo\" class=\"logo\" />\r\n      <div class=\"welcome-text\">\r\n        <h1>Keep track of all the movies you've watched in one place!</h1>\r\n        <p>Movie Tracker helps you organize your movie collection and rate your favorites, <br>\r\n          Whether you're a casual viewer or a true cinephile, <br>\r\n          this app makes it easy to log your movie experiences.\r\n        Start by logging in to access your personal movie list and continue your cinematic journey!</p>\r\n      </div>\r\n    </div>\r\n\r\n      <div class=\"login-form\">\r\n      <h2>Log in</h2>\r\n      <form v-on:submit.prevent=\"login\">\r\n        <div class=\"form-content\">\r\n        <div class=\"input-group\">\r\n          <label for=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            v-model=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            v-model=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"login-btn\">Log in</button>\r\n        <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n      </div>\r\n      </form>\r\n      <p class=\"signup-link\">\r\n        Don't have an account? <router-link to=\"/register\">Sign up</router-link>\r\n      </p>\r\n    </div>\r\n    </div>\r\n\r\n  </template>\r\n\r\n   \r\n<script>\r\nimport { signInWithEmailAndPassword, getIdToken } from 'firebase/auth';\r\nimport { auth } from '@/firebaseConfig';\r\nimport logo from '../assets/logoextinsalb.png';\r\n\r\nexport default {\r\n  data(){\r\n      return {\r\n        logo,\r\n          email: '',\r\n          password: '',\r\n          errorMessage: '',\r\n  };\r\n  },\r\n  methods: {\r\n  async login() {\r\n    try {\r\n      //autentifica utilizatorul \r\n      await signInWithEmailAndPassword(auth, this.email, this.password);\r\n      console.log('User logged in');\r\n\r\n      //obtine token-ul ID de la firebase\r\n      const token = await getIdToken(auth.currentUser);\r\n\r\n      //trimite token-ul la backend pentru autentificare\r\n      const response = await fetch('http://localhost:3000/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify({ email: this.email, password: this.password }), \r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log('Login successful:', data);\r\n        this.$router.push('/home');\r\n      } else {\r\n        this.errorMessage = data.message || 'Login failed';\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error(\"Error details:\", error);\r\n      if (error.code === 'auth/invalid-credential') {\r\n          this.errorMessage = 'Invalid user. Please check you email and password again.';\r\n        }  else {\r\n          this.errorMessage = 'Error logging in. Please try again.';\r\n        }\r\n    }\r\n  }\r\n}\r\n\r\n};\r\n</script>\r\n\r\n<style src=\"@/styles/Login.css\"></style>\r\n  "],"mappings":";AAoDA,SAASA,0BAA0B,EAAEC,UAAS,QAAS,eAAe;AACtE,SAASC,IAAG,QAAS,kBAAkB;AACvC,OAAOC,IAAG,MAAO,6BAA6B;AAE9C,eAAe;EACbC,IAAIA,CAAA,EAAE;IACF,OAAO;MACLD,IAAI;MACFE,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IACtB,CAAC;EACD,CAAC;EACDC,OAAO,EAAE;IACT,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF;QACA,MAAMT,0BAA0B,CAACE,IAAI,EAAE,IAAI,CAACG,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC;QACjEI,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;;QAE7B;QACA,MAAMC,KAAI,GAAI,MAAMX,UAAU,CAACC,IAAI,CAACW,WAAW,CAAC;;QAEhD;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UAC1DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAUL,KAAK;UAClC,CAAC;UACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEf,KAAK,EAAE,IAAI,CAACA,KAAK;YAAEC,QAAQ,EAAE,IAAI,CAACA;UAAS,CAAC;QACrE,CAAC,CAAC;QAEF,MAAMF,IAAG,GAAI,MAAMU,QAAQ,CAACO,IAAI,CAAC,CAAC;QAElC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;UACfZ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEP,IAAI,CAAC;UACtC,IAAI,CAACmB,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;QAC5B,OAAO;UACL,IAAI,CAACjB,YAAW,GAAIH,IAAI,CAACqB,OAAM,IAAK,cAAc;QACpD;MAEF,EAAE,OAAOC,KAAK,EAAE;QACdhB,OAAO,CAACgB,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;QACtC,IAAIA,KAAK,CAACC,IAAG,KAAM,yBAAyB,EAAE;UAC1C,IAAI,CAACpB,YAAW,GAAI,0DAA0D;QAChF,OAAQ;UACN,IAAI,CAACA,YAAW,GAAI,qCAAqC;QAC3D;MACJ;IACF;EACF;AAEA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}