{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"navbar\"\n};\nconst _hoisted_2 = {\n  class: \"nav-logo\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"nav-title\"\n};\nconst _hoisted_5 = {\n  class: \"nav-link\"\n};\nconst _hoisted_6 = {\n  class: \"menu\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"menu-dropdown\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"nav-btn\"\n};\nconst _hoisted_9 = {\n  class: \"container\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"addmovieform\"\n};\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = {\n  class: \"search-filter\"\n};\nconst _hoisted_14 = {\n  class: \"filter-wrap\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"filter-container\"\n};\nconst _hoisted_16 = {\n  class: \"filter-options\"\n};\nconst _hoisted_17 = {\n  key: 0\n};\nconst _hoisted_18 = {\n  key: 0\n};\nconst _hoisted_19 = {\n  class: \"movie-list\"\n};\nconst _hoisted_20 = [\"onClick\"];\nconst _hoisted_21 = [\"src\", \"alt\"];\nconst _hoisted_22 = {\n  class: \"movie-details\"\n};\nconst _hoisted_23 = {\n  class: \"modal-body\"\n};\nconst _hoisted_24 = [\"src\", \"alt\"];\nconst _hoisted_25 = {\n  class: \"modal-info\"\n};\nconst _hoisted_26 = {\n  key: 0\n};\nconst _hoisted_27 = {\n  key: 2\n};\nconst _hoisted_28 = {\n  key: 4\n};\nconst _hoisted_29 = {\n  key: 6\n};\nconst _hoisted_30 = {\n  key: 8\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"nav\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: $data.logo,\n    alt: \"logo\",\n    class: \"logo-image\"\n  }, null, 8 /* PROPS */, _hoisted_3)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString($data.username ? `${$data.username}'s Movie List` : \"Your Movie List\"), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.toggleMenu && $options.toggleMenu(...args)),\n    class: \"menu-btn\"\n  }, [_cache[25] || (_cache[25] = _createTextVNode(\" Menu \")), $data.isMenuVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleForm && $options.toggleForm(...args)),\n    class: \"nav-btn\"\n  }, \"Add New Movie\"), $data.isMenuVisible ? (_openBlock(), _createElementBlock(\"button\", _hoisted_8, \"Profile\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.signoutuser && $options.signoutuser(...args)),\n    class: \"nav-btn\"\n  }, \" Sign out\")])) : _createCommentVNode(\"v-if\", true)])])]), _createElementVNode(\"div\", _hoisted_9, [$data.isFormVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_cache[35] || (_cache[35] = _createElementVNode(\"h2\", null, \"Add a New Movie\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[9] || (_cache[9] = _withModifiers((...args) => $options.addMovie && $options.addMovie(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[26] || (_cache[26] = _createElementVNode(\"label\", {\n    for: \"movieTitle\"\n  }, \"Title:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"movieTitle\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.newMovie.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.title]])]), _createElementVNode(\"div\", null, [_cache[28] || (_cache[28] = _createElementVNode(\"label\", {\n    for: \"movieGenre\"\n  }, \"Genre:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"movieGenre\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.newMovie.genre = $event),\n    required: \"\"\n  }, _cache[27] || (_cache[27] = [_createStaticVNode(\"<option value=\\\"\\\" disabled selected>Select a genre</option><option value=\\\"Action\\\">Action</option><option value=\\\"Animation\\\">Animation</option><option value=\\\"Comedy\\\">Comedy</option><option value=\\\"Drama\\\">Drama</option><option value=\\\"Horror\\\">Horror</option><option value=\\\"Romance\\\">Romance</option><option value=\\\"Sci-Fi\\\">Sci-Fi</option><option value=\\\"Thriller\\\">Thriller</option>\", 9)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.newMovie.genre]])]), _createElementVNode(\"div\", null, [_cache[29] || (_cache[29] = _createElementVNode(\"label\", {\n    for: \"movieDate\"\n  }, \"Date:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"movieDate\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.newMovie.date = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.date]])]), _createElementVNode(\"div\", null, [_cache[30] || (_cache[30] = _createElementVNode(\"label\", {\n    for: \"movieScore\"\n  }, \"Score:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"movieScore\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.newMovie.score = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.score]])]), _createElementVNode(\"div\", null, [_cache[31] || (_cache[31] = _createElementVNode(\"label\", {\n    for: \"details\"\n  }, \"Other Details: \", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"details\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.newMovie.details = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newMovie.details]])]), _createElementVNode(\"div\", null, [_cache[32] || (_cache[32] = _createElementVNode(\"label\", {\n    for: \"moviePoster\"\n  }, \"Movie Poster:\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"moviePoster\",\n    onChange: _cache[8] || (_cache[8] = (...args) => $options.handleImageUpload && $options.handleImageUpload(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), $data.imagePreview ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_cache[33] || (_cache[33] = _createElementVNode(\"h3\", null, \"Image Preview:\", -1 /* HOISTED */)), _createElementVNode(\"img\", {\n    src: $data.imagePreview,\n    alt: \"Image Preview\",\n    style: {\n      \"max-width\": \"200px\",\n      \"margin-top\": \"10px\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_12)])) : _createCommentVNode(\"v-if\", true), _cache[34] || (_cache[34] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn-form\"\n  }, \"Add Movie\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_13, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.searched = $event),\n    type: \"text\",\n    placeholder: \"Search\",\n    class: \"search-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searched]]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"button\", {\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.toggleFilter && $options.toggleFilter(...args)),\n    class: \"filter-btn\"\n  }, \"Filter by\"), $data.isFilterVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_cache[39] || (_cache[39] = _createElementVNode(\"label\", {\n    for: \"filterType\"\n  }, \"Choose filter:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"filterType\",\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.selectedFilter = $event)\n  }, _cache[36] || (_cache[36] = [_createElementVNode(\"option\", {\n    value: \"\"\n  }, \"None\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"genre\"\n  }, \"Genre\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedFilter]]), $data.selectedFilter === 'genre' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_cache[38] || (_cache[38] = _createElementVNode(\"label\", {\n    for: \"genreFilter\"\n  }, \"Choose Genre:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"genreFilter\",\n    \"onUpdate:modelValue\": _cache[13] || (_cache[13] = $event => $data.selectedGenre = $event)\n  }, _cache[37] || (_cache[37] = [_createStaticVNode(\"<option value=\\\"\\\">All</option><option value=\\\"Action\\\">Action</option><option value=\\\"Animation\\\">Animation</option><option value=\\\"Comedy\\\">Comedy</option><option value=\\\"Drama\\\">Drama</option><option value=\\\"Horror\\\">Horror</option><option value=\\\"Romance\\\">Romance</option><option value=\\\"Sci-Fi\\\">Sci-Fi</option><option value=\\\"Thriller\\\">Thriller</option>\", 9)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedGenre]])])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)])]), $data.filteredMovies.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredMovies, movie => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: movie.id,\n      class: \"movie-item\",\n      onClick: $event => $options.showMovieDetails(movie)\n    }, [_createElementVNode(\"img\", {\n      src: movie.posterURL,\n      alt: movie.title,\n      class: \"movie-poster\"\n    }, null, 8 /* PROPS */, _hoisted_21), _createElementVNode(\"div\", _hoisted_22, [_createElementVNode(\"strong\", null, _toDisplayString(movie.title), 1 /* TEXT */), _cache[40] || (_cache[40] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */))])], 8 /* PROPS */, _hoisted_20);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.selectedMovie ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: \"modal-overlay\",\n    onClick: _cache[24] || (_cache[24] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, [_createElementVNode(\"div\", {\n    class: \"modal-content\",\n    onClick: _cache[23] || (_cache[23] = _withModifiers(() => {}, [\"stop\"]))\n  }, [_createElementVNode(\"button\", {\n    class: \"close-button\",\n    onClick: _cache[14] || (_cache[14] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"×\"), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"img\", {\n    src: $data.selectedMovie.posterURL,\n    alt: $data.selectedMovie.title,\n    class: \"modal-poster\"\n  }, null, 8 /* PROPS */, _hoisted_24), _createElementVNode(\"div\", _hoisted_25, [!$data.isEditing ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_26, _toDisplayString($data.selectedMovie.title), 1 /* TEXT */)) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.editedMovie.title = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.title]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_27, [_cache[41] || (_cache[41] = _createElementVNode(\"strong\", null, \"Genre:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedMovie.genre), 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 3,\n    \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => $data.editedMovie.genre = $event)\n  }, _cache[42] || (_cache[42] = [_createStaticVNode(\"<option value=\\\"Action\\\">Action</option><option value=\\\"Animation\\\">Animation</option><option value=\\\"Comedy\\\">Comedy</option><option value=\\\"Drama\\\">Drama</option><option value=\\\"Horror\\\">Horror</option><option value=\\\"Romance\\\">Romance</option><option value=\\\"Sci-Fi\\\">Sci-Fi</option><option value=\\\"Thriller\\\">Thriller</option>\", 8)]), 512 /* NEED_PATCH */)), [[_vModelSelect, $data.editedMovie.genre]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_28, [_cache[43] || (_cache[43] = _createElementVNode(\"strong\", null, \"Date seen:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($options.formatDate($data.selectedMovie.date)), 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 5,\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $data.editedMovie.date = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.date]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_29, [_cache[44] || (_cache[44] = _createElementVNode(\"strong\", null, \"Score:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedMovie.score) + \"/10\", 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 7,\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => $data.editedMovie.score = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.score]]), !$data.isEditing ? (_openBlock(), _createElementBlock(\"p\", _hoisted_30, [_cache[45] || (_cache[45] = _createElementVNode(\"strong\", null, \"Other Details:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedMovie.details), 1 /* TEXT */)])) : _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 9,\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[19] || (_cache[19] = $event => $data.editedMovie.details = $event)\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.editedMovie.details]]), _createElementVNode(\"button\", {\n    class: \"edit-button\",\n    onClick: _cache[20] || (_cache[20] = (...args) => $options.editMovie && $options.editMovie(...args))\n  }, \"Edit\"), _createElementVNode(\"button\", {\n    class: \"delete-button\",\n    onClick: _cache[21] || (_cache[21] = (...args) => $options.deleteMovie && $options.deleteMovie(...args))\n  }, \"Delete\"), $data.isEditing ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 10,\n    onClick: _cache[22] || (_cache[22] = (...args) => $options.saveMovieEdits && $options.saveMovieEdits(...args))\n  }, \"Save\")) : _createCommentVNode(\"v-if\", true)])])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_createElementVNode","_hoisted_1","_hoisted_2","src","$data","logo","alt","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","username","_hoisted_6","onClick","_cache","args","$options","toggleMenu","_createTextVNode","isMenuVisible","_hoisted_7","toggleForm","_hoisted_8","_createCommentVNode","type","signoutuser","_hoisted_9","isFormVisible","_hoisted_10","onSubmit","_withModifiers","addMovie","for","id","$event","newMovie","title","required","genre","_createStaticVNode","date","score","details","onChange","handleImageUpload","accept","imagePreview","_hoisted_11","style","_hoisted_12","_hoisted_13","searched","placeholder","_hoisted_14","toggleFilter","isFilterVisible","_hoisted_15","_hoisted_16","selectedFilter","value","_hoisted_17","selectedGenre","filteredMovies","length","_hoisted_18","_hoisted_19","_Fragment","_renderList","movie","showMovieDetails","posterURL","_hoisted_21","_hoisted_22","_hoisted_20","selectedMovie","closeModal","_hoisted_23","_hoisted_24","_hoisted_25","isEditing","_hoisted_26","editedMovie","_hoisted_27","_hoisted_28","formatDate","_hoisted_29","_hoisted_30","editMovie","deleteMovie","saveMovieEdits"],"sources":["D:\\facultate\\mastrer\\movie-app-tic\\front\\client\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n      <nav class=\"navbar\">\r\n        <div class=\"nav-logo\">\r\n          <img :src=\"logo\" alt=\"logo\" class=\"logo-image\">\r\n          \r\n        </div>\r\n\r\n        <div class=\"nav-title\">\r\n        <span class=\"nav-link\">{{ username ? `${username}'s Movie List` : \"Your Movie List\" }}</span>\r\n      </div>\r\n\r\n      <div class=\"menu\">\r\n        <button @click=\"toggleMenu\" class=\"menu-btn\"> Menu\r\n          <div v-if=\"isMenuVisible\" class=\"menu-dropdown\">\r\n            <button @click=\"toggleForm\" class=\"nav-btn\">Add New Movie</button>\r\n          <button v-if=\"isMenuVisible\" class=\"nav-btn\">Profile</button>\r\n          <button type = button v-on:click=\"signoutuser\" class=\"nav-btn\"> Sign out</button>\r\n     \r\n          </div>\r\n        </button>\r\n      </div>\r\n        \r\n      </nav>\r\n\r\n      <div class=\"container\">\r\n\r\n    \r\n      <div v-if=\"isFormVisible\" class=\"addmovieform\">\r\n      <h2>Add a New Movie</h2>\r\n       <form @submit.prevent=\"addMovie\">\r\n        <div>\r\n          <label for=\"movieTitle\">Title:</label>\r\n          <input type=\"text\" id=\"movieTitle\" v-model=\"newMovie.title\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieGenre\">Genre:</label>\r\n          <select id=\"movieGenre\" v-model=\"newMovie.genre\" required>\r\n            <option value=\"\" disabled selected>Select a genre</option>\r\n            <option value=\"Action\">Action</option>\r\n            <option value=\"Animation\">Animation</option>\r\n            <option value=\"Comedy\">Comedy</option>\r\n            <option value=\"Drama\">Drama</option>\r\n            <option value=\"Horror\">Horror</option>\r\n            <option value=\"Romance\">Romance</option>\r\n            <option value=\"Sci-Fi\">Sci-Fi</option>\r\n            <option value=\"Thriller\">Thriller</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieDate\">Date:</label>\r\n          <input type=\"date\" id=\"movieDate\" v-model=\"newMovie.date\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieScore\">Score:</label>\r\n          <input type=\"number\" id=\"movieScore\" v-model=\"newMovie.score\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for =\"details\">Other Details: </label>\r\n          <input type=\"text\" id=\"details\" v-model = \"newMovie.details\" required/>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"moviePoster\">Movie Poster:</label>\r\n          <input type=\"file\" id=\"moviePoster\" @change=\"handleImageUpload\" accept=\"image/*\" />\r\n        </div>\r\n        <div v-if=\"imagePreview\">\r\n          <h3>Image Preview:</h3>\r\n          <img :src=\"imagePreview\" alt=\"Image Preview\" style=\"max-width: 200px; margin-top: 10px;\"/>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn-form\">Add Movie</button>\r\n        </form>\r\n       </div>\r\n    \r\n    </div>\r\n\r\n    \r\n        <div class=\"search-filter\">\r\n          <input v-model=\"searched\" type=\"text\" placeholder=\"Search\" class=\"search-input\">\r\n          \r\n          <div class = \"filter-wrap\">\r\n          <button @click=\"toggleFilter\" class=\"filter-btn\">Filter by</button>\r\n          <div  v-if=\"isFilterVisible\" class=\"filter-container\">\r\n   \r\n  \r\n   <div class=\"filter-options\">\r\n     <label for=\"filterType\">Choose filter:</label>\r\n     <select id=\"filterType\" v-model=\"selectedFilter\">\r\n       <option value=\"\">None</option>\r\n       <option value=\"genre\">Genre</option>\r\n     </select>\r\n\r\n     <div v-if=\"selectedFilter === 'genre'\">\r\n     <label for=\"genreFilter\">Choose Genre:</label>\r\n     <select id=\"genreFilter\" v-model=\"selectedGenre\">\r\n       <option value=\"\">All</option>\r\n       <option value=\"Action\">Action</option>\r\n       <option value=\"Animation\">Animation</option>\r\n       <option value=\"Comedy\">Comedy</option>\r\n       <option value=\"Drama\">Drama</option>\r\n       <option value=\"Horror\">Horror</option>\r\n       <option value=\"Romance\">Romance</option>\r\n       <option value=\"Sci-Fi\">Sci-Fi</option>\r\n       <option value=\"Thriller\">Thriller</option>\r\n     </select>\r\n    </div>\r\n  </div>\r\n  </div>\r\n          </div>\r\n        </div>\r\n     \r\n\r\n     \r\n\r\n    <div v-if=\"filteredMovies.length >0\">\r\n     \r\n      <div class=\"movie-list\">\r\n        <div v-for=\"movie in filteredMovies\" :key=\"movie.id\" class=\"movie-item\" @click=\"showMovieDetails(movie)\">\r\n          \r\n          <img \r\n          :src=\"movie.posterURL\" \r\n          :alt=\"movie.title\"\r\n          class=\"movie-poster\"\r\n        />\r\n        <div class=\"movie-details\">\r\n          <strong>{{ movie.title }}</strong><br/>\r\n          \r\n        </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    \r\n\r\n    <div v-if=\"selectedMovie\" class=\"modal-overlay\" @click=\"closeModal\">\r\n      <div class=\"modal-content\" @click.stop>\r\n        <button class=\"close-button\" @click=\"closeModal\">&times;</button>\r\n        <div class=\"modal-body\">\r\n          <img :src=\"selectedMovie.posterURL\" :alt=\"selectedMovie.title\" class=\"modal-poster\"/>\r\n          <div class=\"modal-info\">\r\n\r\n            <h2 v-if=\"!isEditing\">{{ selectedMovie.title }}</h2>\r\n            <input v-else type=\"text\" v-model=\"editedMovie.title\" />\r\n\r\n           <p v-if=\"!isEditing\"><strong>Genre:</strong> {{ selectedMovie.genre }}</p>\r\n            <select v-else v-model=\"editedMovie.genre\">\r\n              <option value=\"Action\">Action</option>\r\n              <option value=\"Animation\">Animation</option>\r\n              <option value=\"Comedy\">Comedy</option>\r\n              <option value=\"Drama\">Drama</option>\r\n              <option value=\"Horror\">Horror</option>\r\n              <option value=\"Romance\">Romance</option>\r\n              <option value=\"Sci-Fi\">Sci-Fi</option>\r\n              <option value=\"Thriller\">Thriller</option>\r\n            </select>\r\n\r\n             <p v-if=\"!isEditing\"><strong>Date seen:</strong> {{ formatDate(selectedMovie.date) }}</p>\r\n            <input v-else type=\"date\" v-model=\"editedMovie.date\" />\r\n\r\n            <p v-if=\"!isEditing\"><strong>Score:</strong> {{ selectedMovie.score }}/10</p>\r\n            <input v-else type=\"number\" v-model=\"editedMovie.score\" />\r\n\r\n            <p v-if=\"!isEditing\"><strong>Other Details:</strong> {{ selectedMovie.details }}</p>\r\n            <input v-else type=\"text\" v-model=\"editedMovie.details\"/>\r\n\r\n            <button class=\"edit-button\" @click=\"editMovie\">Edit</button>\r\n            <button class=\"delete-button\" @click=\"deleteMovie\">Delete</button>\r\n            <button v-if=\"isEditing\" @click=\"saveMovieEdits\">Save</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n    \r\n  </template>\r\n\r\n<script>\r\nimport logo from '@/assets/logoextinsalb.png';\r\nimport { signOut } from 'firebase/auth';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport {auth} from '../firebaseConfig';\r\nimport { getFirestore, collection, addDoc, serverTimestamp, updateDoc, doc} from \"firebase/firestore\";\r\nimport{ ref, uploadBytes, getDownloadURL} from 'firebase/storage';\r\nimport { storage } from '../firebaseConfig';\r\n\r\nconst db = getFirestore();\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  data(){\r\n    return{\r\n      logo,\r\n      movies: [],\r\n      isFormVisible: false,\r\n      isEditing: false,\r\n      isMenuVisible: false,\r\n      editedMovie: {},\r\n      newMovie:{\r\n        title: '',\r\n        genre: '',\r\n        date: '',\r\n        score: '',\r\n        details: '',\r\n        poster: null,\r\n      },\r\n      imagePreview: null,\r\n      username: null,\r\n      selectedMovie: null,\r\n      searched: '',\r\n      filteredMovies:[],\r\n      selectedGenre:'',\r\n      selectedFilter: '',\r\n      isFilterVisible: false,\r\n    };\r\n  },\r\n\r\n  created(){\r\n    this.displayMovies();\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        this.username = user.email; \r\n        this.fetchUserName(user.uid);\r\n        console.log(\"User logged in:\", user.email);\r\n      } else {\r\n        console.log(\"No user logged in\");\r\n        this.$router.push('/'); \r\n      }\r\n    });\r\n\r\n  },\r\n\r\n  methods: {\r\n  async signoutuser() {\r\n    console.log(\"Sign out button clicked\");\r\n    try {\r\n      await signOut(auth);\r\n      console.log(\"User signed out\");\r\n      this.$router.push('/');\r\n    } catch (error) {\r\n      console.error(\"Error signing out: \", error);\r\n    }\r\n  },\r\n  toggleForm(){\r\n    this.isFormVisible = !this.isFormVisible;\r\n  },\r\n  handleImageUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        \r\n        this.imagePreview = URL.createObjectURL(file);\r\n        this.newMovie.poster = file; \r\n        console.log('Poster uploaded:', this.newMovie.poster);\r\n      }else {\r\n        console.error('No file selected or invalid file.');\r\n      }\r\n    },\r\n\r\n    fetchUserName() {\r\n      const user = auth.currentUser;\r\n\r\n     if (user) {\r\n         fetch(`http://localhost:3000/user/${user.uid}`).then(response => response.json())\r\n            .then(data => {\r\n               console.log('User data fetched:', data);\r\n               this.username = data.firstName;\r\n             }).catch(error => {\r\n                console.error('Error fetching user:', error);\r\n                });\r\n  }\r\n    },\r\n\r\n  async addMovie(){\r\n    try {\r\n        if (!this.newMovie.poster || !(this.newMovie.poster instanceof File)) {\r\n          alert(\"Please upload a valid movie poster.\");\r\n          return;\r\n        }\r\n\r\n         //upload poster in storage\r\n        const posterRef = ref(storage, `posters/${this.newMovie.poster.name}`);\r\n        await uploadBytes(posterRef, this.newMovie.poster);\r\n        const posterURL = await getDownloadURL(posterRef);\r\n\r\n        const user = auth.currentUser;\r\n\r\n        await addDoc(collection(db, \"movies\"), {\r\n          movie:{\r\n            title: this.newMovie.title,\r\n            genre: this.newMovie.genre ,\r\n            date: this.newMovie.date,\r\n            score: parseFloat(this.newMovie.score),\r\n            details: this.newMovie.details\r\n          },\r\n          \r\n          posterURL,\r\n          user: {\r\n            uid: user.uid,\r\n            email: user.email,\r\n            \r\n          },\r\n          metadata: {\r\n            createdAt: serverTimestamp(),\r\n            updatedAt: serverTimestamp(),\r\n          },\r\n        });\r\n\r\n        console.log('Movie added successfully');\r\n        this.newMovie = { title: '', genre: '', date: '', score: '', details: '', poster: null };\r\n        this.imagePreview = null;\r\n        this.isFormVisible = false;\r\n        alert(\"Movie added sucessfully\");\r\n      } catch (error) {\r\n        console.error(\"Error adding movie: \", error);\r\n      }\r\n    \r\n    },\r\n\r\n    //modala\r\n    async displayMovies(){\r\n      try{\r\n        const response = await fetch('http://localhost:3000/movies');\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n       const movies = await response.json();\r\n       console.log(\"Filmele primite:\", movies);\r\n       \r\n       this.movies = movies.map(movie => ({\r\n        id: movie.id,\r\n        ...movie,\r\n      posterURL: movie.posterURL \r\n    }));\r\n\r\n    this.filteredMovies = this.movies;\r\n      } catch(error){\r\n        console.error(\"Error displaying movies: \", error);\r\n      }\r\n    },\r\n\r\n    showMovieDetails(movie){\r\n      this.selectedMovie = movie;\r\n    },\r\n\r\n    closeModal(){\r\n      this.selectedMovie = null;\r\n    },\r\n\r\n    formatDate(date){\r\n      if (!date) return 'No date available';\r\n      try {\r\n        const options = { day: '2-digit', month: '2-digit', year: 'numeric' };\r\n        //'en-GB' este pentru zi/luna/an\r\n        return new Date(date).toLocaleDateString('en-GB', options); \r\n    } catch (error) {\r\n      return 'Invalid Date';\r\n    }\r\n    },\r\n\r\n    editMovie(){\r\n      this.isEditing = true;\r\n      this.editedMovie = { ...this.selectedMovie };\r\n    },\r\n\r\n    async saveMovieEdits() {\r\n     try {\r\n      if (!this.selectedMovie.id) return;\r\n\r\n      const movieRef = doc(db, \"movies\", this.selectedMovie.id);\r\n      await updateDoc(movieRef, {\r\n        \"movie.title\": this.editedMovie.title,\r\n        \"movie.genre\": this.editedMovie.genre,\r\n        \"movie.date\": this.editedMovie.date,\r\n        \"movie.score\": this.editedMovie.score,\r\n        \"movie.details\": this.editedMovie.details,\r\n        \"metadata.updatedAt\": serverTimestamp(),\r\n      });\r\n\r\n      Object.assign(this.selectedMovie, this.editedMovie);\r\n      this.isEditing = false;\r\n         } catch (error) {\r\n      console.error(\"Error updating movie:\", error);\r\n        }\r\n      },\r\n\r\n    async deleteMovie() {\r\n      if (!this.selectedMovie || !this.selectedMovie.id) {\r\n          console.error(\"No movie selected or invalid movie ID\");\r\n          return;\r\n      }\r\n\r\n      try {\r\n\r\n        if (!confirm(\"Are you sure you want to delete this movie?\")) {\r\n        return;\r\n      }\r\n\r\n      console.log(\"Attempting to delete movie with ID:\", this.selectedMovie.id);\r\n\r\n      const response = await fetch(`http://localhost:3000/movies/${this.selectedMovie.id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      });\r\n\r\n      console.log(\"Delete response status:\", response.status);\r\n\r\n      const responseData = await response.json();\r\n\r\n      if (!response.ok) {\r\n        alert(responseData.error || \"Failed to delete movie\");\r\n        return;\r\n      }\r\n\r\n      const index = this.movies.findIndex(movie => movie.id === this.selectedMovie.id);\r\n      if (index > -1) {\r\n        this.movies.splice(index, 1);\r\n      }\r\n\r\n      this.closeModal();\r\n      console.log('Movie deleted successfully');\r\n      } catch (error) {\r\n        console.error(\"Error deleting movie:\", error);\r\n        alert(\"Failed to delete movie. Please try again.\");\r\n      }\r\n    },\r\n    \r\n    //search\r\n      searching(){\r\n        if(!this.searched){\r\n          this.filteredMovies = this.movies;\r\n        }else{\r\n          const lowerCase = this.searched.toLowerCase();\r\n          this.filteredMovies = this.movies.filter(movie=>\r\n            movie.title.toLowerCase().includes(lowerCase)\r\n          );\r\n        }\r\n      },\r\n\r\n      //filter\r\n\r\n      toggleFilter() {\r\n        this.isFilterVisible = !this.isFilterVisible;\r\n      },\r\n\r\n      applyFilter() {\r\n        if (!this.selectedFilter) {\r\n            this.filteredMovies = this.movies;\r\n        return;\r\n      }\r\n\r\n        if (this.selectedFilter === \"genre\" && this.selectedGenre) {\r\n            this.filteredMovies = this.movies.filter(movie => movie.genre === this.selectedGenre);\r\n        } else {\r\n        this.filteredMovies = this.movies;\r\n         }\r\n      },\r\n\r\n      toggleMenu() {\r\n      this.isMenuVisible = !this.isMenuVisible;\r\n    },\r\n    closeMenu(e) {\r\n      if (!e.target.closest('.nav-menu')) {\r\n        this.isMenuVisible = false;\r\n      }\r\n    }\r\n\r\n\r\n  },\r\n      watch: {\r\n       searched() {\r\n        this.searching();\r\n      },\r\n       selectedFilter() {\r\n        this.applyFilter();\r\n      },\r\n      selectedGenre() {\r\n        this.applyFilter();\r\n      }\r\n  },\r\n  mounted() {\r\n    // Add click event listener to close menu when clicking outside\r\n    document.addEventListener('click', this.closeMenu);\r\n  },\r\n\r\n  beforeUnmount() {\r\n    // Remove event listener when component is destroyed\r\n    document.removeEventListener('click', this.closeMenu);\r\n  }\r\n    \r\n\r\n};\r\n</script>\r\n\r\n<style src=\"../styles/HomePage.css\"></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}