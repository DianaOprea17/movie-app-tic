{"ast":null,"code":"import { auth } from '@/firebaseConfig';\nimport { signInWithEmailAndPassword, getIdToken } from 'firebase/auth';\nexport default {\n  data() {\n    return {\n      email: '',\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        await signInWithEmailAndPassword(auth, this.email, this.password);\n        console.log('User logged in');\n        const token = await getIdToken(auth.currentUser);\n\n        // Trimite token-ul la backend\n        const response = await fetch('http://localhost:3000/protected', {\n          method: 'POST',\n          headers: {\n            'Authorization': token,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            someData: 'example'\n          })\n        });\n        const data = await response.json();\n        console.log(data);\n      } catch (error) {\n        console.error('Error logging in', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["auth","signInWithEmailAndPassword","getIdToken","data","email","password","methods","login","console","log","token","currentUser","response","fetch","method","headers","body","JSON","stringify","someData","json","error"],"sources":["D:\\facultate\\mastrer\\movie-app-tic\\front\\client\\src\\components\\LoginUser.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <h2>Log in</h2>\r\n      <form v-on:submit.prevent=\"login\">\r\n        <div class=\"input-group\">\r\n          <label for=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            v-model=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            required\r\n          />\r\n        </div>\r\n        <div class=\"input-group\">\r\n          <label for=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            v-model=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"login-btn\">Log in</button>\r\n        <p v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</p>\r\n      </form>\r\n      <p class=\"signup-link\">\r\n        Don't have an account? <router-link to=\"/register\">Sign up</router-link>\r\n      </p>\r\n    </div>\r\n  </template>\r\n\r\n   \r\n<script>\r\nimport { auth} from '@/firebaseConfig';\r\nimport { signInWithEmailAndPassword, getIdToken } from 'firebase/auth';\r\n\r\nexport default {\r\n  data(){\r\n      return {\r\n          email: '',\r\n          password: '',\r\n  };\r\n  },\r\n  methods: {\r\n    async login(){\r\n        try{\r\n            await signInWithEmailAndPassword(auth, this.email, this.password);\r\n            console.log('User logged in');\r\n            const token = await getIdToken(auth.currentUser);\r\n\r\n             // Trimite token-ul la backend\r\n            const response = await fetch('http://localhost:3000/protected', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': token,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ someData: 'example' })\r\n        });\r\n\r\n        const data = await response.json();\r\n        console.log(data);\r\n\r\n        }catch(error){\r\n            console.error('Error logging in', error);\r\n        }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style src=\"@/styles/Login.css\"></style>\r\n  "],"mappings":"AAmCA,SAASA,IAAI,QAAO,kBAAkB;AACtC,SAASC,0BAA0B,EAAEC,UAAS,QAAS,eAAe;AAEtE,eAAe;EACbC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IAClB,CAAC;EACD,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAE;MACT,IAAG;QACC,MAAMN,0BAA0B,CAACD,IAAI,EAAE,IAAI,CAACI,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC;QACjEG,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC7B,MAAMC,KAAI,GAAI,MAAMR,UAAU,CAACF,IAAI,CAACW,WAAW,CAAC;;QAE/C;QACD,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,iCAAiC,EAAE;UAClEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,eAAe,EAAEL,KAAK;YACtB,cAAc,EAAE;UAClB,CAAC;UACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,QAAQ,EAAE;UAAU,CAAC;QAC9C,CAAC,CAAC;QAEF,MAAMhB,IAAG,GAAI,MAAMS,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCZ,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;MAEjB,CAAC,QAAMkB,KAAK,EAAC;QACTb,OAAO,CAACa,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC5C;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}