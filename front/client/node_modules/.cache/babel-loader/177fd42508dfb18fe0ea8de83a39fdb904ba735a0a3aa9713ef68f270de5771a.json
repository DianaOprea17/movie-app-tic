{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { signOut } from \"firebase/auth\";\nimport { auth } from '../firebaseConfig';\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"../firebaseConfig\";\nconst db = getFirestore();\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      isFormVisible: false,\n      newMovie: {\n        title: '',\n        genre: '',\n        date: '',\n        score: '',\n        poster: null\n      },\n      imagePreview: null,\n      username: null\n    };\n  },\n  created() {\n    this.fetchUserName();\n  },\n  methods: {\n    async signoutuser() {\n      console.log(\"Sign out button clicked\");\n      try {\n        await signOut(auth);\n        console.log(\"User signed out\");\n        this.$router.push('/');\n      } catch (error) {\n        console.error(\"Error signing out: \", error);\n      }\n    },\n    toggleForm() {\n      this.isFormVisible = !this.isFormVisible;\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.imagePreview = URL.createObjectURL(file);\n        this.newMovie.poster = file;\n        console.log('Poster uploaded:', this.newMovie.poster);\n      } else {\n        console.error('No file selected or invalid file.');\n      }\n    },\n    async fetchUserName() {\n      try {\n        const user = auth.currentUser;\n        const uid = user.uid;\n        const response = await fetch(`http://localhost:3000/user/${uid}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${user.getIdToken()}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Error fetching user: ${response.statusText}`);\n        }\n        const userData = await response.json();\n        this.userName = userData.name; // Setează numele utilizatorului\n      } catch (error) {\n        console.error(\"Error fetching user name:\", error);\n        this.userName = \"Error fetching user\"; // Opțional, setează un mesaj de eroare în interfață\n      }\n    },\n    async addMovie() {\n      try {\n        if (!this.newMovie.poster || !(this.newMovie.poster instanceof File)) {\n          alert(\"Please upload a valid movie poster.\");\n          return;\n        }\n        const posterRef = ref(storage, `posters/${this.newMovie.poster.name}`);\n        await uploadBytes(posterRef, this.newMovie.poster);\n        const posterURL = await getDownloadURL(posterRef);\n        const user = auth.currentUser;\n        await addDoc(collection(db, \"movies\"), {\n          title: this.newMovie.title,\n          genre: this.newMovie.genre,\n          date: this.newMovie.date,\n          score: this.newMovie.score,\n          posterURL,\n          userEmail: user.email\n        });\n        console.log('Movie added successfully');\n        this.newMovie = {\n          title: '',\n          genre: '',\n          date: '',\n          score: '',\n          poster: null\n        };\n        this.imagePreview = null;\n        this.isFormVisible = false;\n      } catch (error) {\n        console.error(\"Error adding movie: \", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["signOut","auth","getFirestore","collection","addDoc","ref","uploadBytes","getDownloadURL","storage","db","name","data","isFormVisible","newMovie","title","genre","date","score","poster","imagePreview","username","created","fetchUserName","methods","signoutuser","console","log","$router","push","error","toggleForm","handleImageUpload","event","file","target","files","URL","createObjectURL","user","currentUser","uid","response","fetch","method","headers","getIdToken","ok","Error","statusText","userData","json","userName","addMovie","File","alert","posterRef","posterURL","userEmail","email"],"sources":["D:\\facultate\\mastrer\\movie-app-tic\\front\\client\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>{{ username ? `Welcome, ${username}'s Movie List` : \"Your Movie List\" }}</h1>\r\n      <button type = button v-on:click=\"signoutuser\" class=\"btn-up\"> Sign out</button>\r\n      <button @click=\"toggleForm\" class=\"btn-up\">Add New Movie</button>\r\n\r\n      <div v-if=\"isFormVisible\" class=\"addmovieform\">\r\n      <h2>Add a New Movie</h2>\r\n       <form @submit.prevent=\"addMovie\">\r\n        <div>\r\n          <label for=\"movieTitle\">Title:</label>\r\n          <input type=\"text\" id=\"movieTitle\" v-model=\"newMovie.title\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieGenre\">Genre:</label>\r\n          <select id=\"movieGenre\" v-model=\"newMovie.genre\" required>\r\n            <option value=\"\" disabled selected>Select a genre</option>\r\n            <option value=\"Action\">Action</option>\r\n            <option value=\"Animation\">Animation</option>\r\n            <option value=\"Comedy\">Comedy</option>\r\n            <option value=\"Drama\">Drama</option>\r\n            <option value=\"Horror\">Horror</option>\r\n            <option value=\"Romance\">Romance</option>\r\n            <option value=\"Sci-Fi\">Sci-Fi</option>\r\n            <option value=\"Thriller\">Thriller</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieDate\">Date:</label>\r\n          <input type=\"date\" id=\"movieDate\" v-model=\"newMovie.date\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieScore\">Score:</label>\r\n          <input type=\"number\" id=\"movieScore\" v-model=\"newMovie.score\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"moviePoster\">Movie Poster:</label>\r\n          <input type=\"file\" id=\"moviePoster\" @change=\"handleImageUpload\" accept=\"image/*\" />\r\n        </div>\r\n        <div v-if=\"imagePreview\">\r\n          <h3>Image Preview:</h3>\r\n          <img :src=\"imagePreview\" alt=\"Image Preview\" style=\"max-width: 200px; margin-top: 10px;\"/>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn-form\">Add Movie</button>\r\n        </form>\r\n       </div>\r\n\r\n    </div>\r\n\r\n\r\n  </template>\r\n\r\n<script>\r\nimport { signOut } from \"firebase/auth\";\r\nimport {auth} from '../firebaseConfig';\r\nimport { getFirestore, collection, addDoc} from \"firebase/firestore\";\r\nimport{ ref, uploadBytes, getDownloadURL} from \"firebase/storage\";\r\nimport { storage } from \"../firebaseConfig\";\r\n\r\nconst db = getFirestore();\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  data(){\r\n    return{\r\n      isFormVisible: false,\r\n      newMovie:{\r\n        title: '',\r\n        genre: '',\r\n        date: '',\r\n        score: '',\r\n        poster: null,\r\n      },\r\n      imagePreview: null,\r\n      username: null,\r\n    };\r\n  },\r\n\r\n  created(){\r\n    this.fetchUserName();\r\n  },\r\n\r\n  methods: {\r\n  async signoutuser() {\r\n    console.log(\"Sign out button clicked\");\r\n    try {\r\n      await signOut(auth);\r\n      console.log(\"User signed out\");\r\n      this.$router.push('/');\r\n    } catch (error) {\r\n      console.error(\"Error signing out: \", error);\r\n    }\r\n  },\r\n  toggleForm(){\r\n    this.isFormVisible = !this.isFormVisible;\r\n  },\r\n  handleImageUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        \r\n        this.imagePreview = URL.createObjectURL(file);\r\n        this.newMovie.poster = file; \r\n        console.log('Poster uploaded:', this.newMovie.poster);\r\n      }else {\r\n        console.error('No file selected or invalid file.');\r\n      }\r\n    },\r\n\r\n    async fetchUserName() {\r\n      try {\r\n      const user = auth.currentUser;\r\n      const uid = user.uid;\r\n      const response = await fetch(`http://localhost:3000/user/${uid}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${user.getIdToken()}`\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching user: ${response.statusText}`);\r\n      }\r\n\r\n      const userData = await response.json();\r\n      this.userName = userData.name; // Setează numele utilizatorului\r\n    } catch (error) {\r\n      console.error(\"Error fetching user name:\", error);\r\n      this.userName = \"Error fetching user\"; // Opțional, setează un mesaj de eroare în interfață\r\n    }\r\n    },\r\n    \r\n  async addMovie(){\r\n    try {\r\n        if (!this.newMovie.poster || !(this.newMovie.poster instanceof File)) {\r\n          alert(\"Please upload a valid movie poster.\");\r\n          return;\r\n        }\r\n\r\n        const posterRef = ref(storage, `posters/${this.newMovie.poster.name}`);\r\n        await uploadBytes(posterRef, this.newMovie.poster);\r\n        const posterURL = await getDownloadURL(posterRef);\r\n\r\n        const user = auth.currentUser;\r\n        await addDoc(collection(db, \"movies\"), {\r\n          title: this.newMovie.title,\r\n          genre: this.newMovie.genre,\r\n          date: this.newMovie.date,\r\n          score: this.newMovie.score,\r\n          posterURL,\r\n          userEmail: user.email,\r\n        });\r\n\r\n        console.log('Movie added successfully');\r\n        this.newMovie = { title: '', genre: '', date: '', score: '', poster: null };\r\n        this.imagePreview = null;\r\n        this.isFormVisible = false;\r\n      } catch (error) {\r\n        console.error(\"Error adding movie: \", error);\r\n      }\r\n    \r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style src=\"../styles/HomePage.css\"></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}