{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"addmovieform\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"src\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[18] || (_cache[18] = _createElementVNode(\"h1\", null, \"Your Movie List\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.signoutuser && _ctx.signoutuser(...args)),\n    class: \"btn-up\"\n  }, \" Sign out\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.toggleForm && _ctx.toggleForm(...args)),\n    class: \"btn-up\"\n  }, \"Add New Movie\"), _ctx.isFormVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[17] || (_cache[17] = _createElementVNode(\"h2\", null, \"Add a New Movie\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[7] || (_cache[7] = _withModifiers((...args) => _ctx.addMovie && _ctx.addMovie(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"movieTitle\"\n  }, \"Title:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"movieTitle\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.newMovie.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newMovie.title]])]), _createElementVNode(\"div\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"movieGenre\"\n  }, \"Genre:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"movieGenre\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.newMovie.genre = $event),\n    required: \"\"\n  }, [_cache[9] || (_cache[9] = _createElementVNode(\"option\", {\n    value: \"\",\n    disabled: \"\",\n    selected: \"\"\n  }, \"Select a genre\", -1 /* HOISTED */)), _createCommentVNode(\" Opțiune default \"), _cache[10] || (_cache[10] = _createStaticVNode(\"<option value=\\\"Action\\\">Action</option><option value=\\\"Animation\\\">Animation</option><option value=\\\"Comedy\\\">Comedy</option><option value=\\\"Drama\\\">Drama</option><option value=\\\"Horror\\\">Horror</option><option value=\\\"Romance\\\">Romance</option><option value=\\\"Sci-Fi\\\">Sci-Fi</option><option value=\\\"Thriller\\\">Thriller</option>\", 8))], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.newMovie.genre]])]), _createElementVNode(\"div\", null, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    for: \"movieDate\"\n  }, \"Date:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"movieDate\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.newMovie.date = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newMovie.date]])]), _createElementVNode(\"div\", null, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    for: \"movieScore\"\n  }, \"Score:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    id: \"movieScore\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.newMovie.score = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newMovie.score]])]), _createElementVNode(\"div\", null, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    for: \"moviePoster\"\n  }, \"Movie Poster:\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"moviePoster\",\n    onChange: _cache[6] || (_cache[6] = (...args) => _ctx.handleImageUpload && _ctx.handleImageUpload(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), _ctx.imagePreview ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[15] || (_cache[15] = _createElementVNode(\"h3\", null, \"Image Preview:\", -1 /* HOISTED */)), _createElementVNode(\"img\", {\n    src: _ctx.imagePreview,\n    alt: \"Image Preview\",\n    style: {\n      \"max-width\": \"200px\",\n      \"margin-top\": \"10px\"\n    }\n  }, null, 8 /* PROPS */, _hoisted_3)])) : _createCommentVNode(\"v-if\", true), _cache[16] || (_cache[16] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn-form\"\n  }, \"Add Movie\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createElementVNode","type","onClick","_cache","args","_ctx","signoutuser","toggleForm","isFormVisible","_hoisted_1","onSubmit","_withModifiers","addMovie","for","id","$event","newMovie","title","required","genre","value","disabled","selected","_createCommentVNode","_createStaticVNode","date","score","onChange","handleImageUpload","accept","imagePreview","_hoisted_2","src","alt","style","_hoisted_3"],"sources":["D:\\facultate\\mastrer\\movie-app-tic\\front\\client\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Your Movie List</h1>\r\n      <button type = button v-on:click=\"signoutuser\" class=\"btn-up\"> Sign out</button>\r\n      <button @click=\"toggleForm\" class=\"btn-up\">Add New Movie</button>\r\n\r\n      <div v-if=\"isFormVisible\" class=\"addmovieform\">\r\n      <h2>Add a New Movie</h2>\r\n       <form @submit.prevent=\"addMovie\">\r\n        <div>\r\n          <label for=\"movieTitle\">Title:</label>\r\n          <input type=\"text\" id=\"movieTitle\" v-model=\"newMovie.title\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieGenre\">Genre:</label>\r\n          <select id=\"movieGenre\" v-model=\"newMovie.genre\" required>\r\n            <option value=\"\" disabled selected>Select a genre</option> <!-- Opțiune default -->\r\n            <option value=\"Action\">Action</option>\r\n            <option value=\"Animation\">Animation</option>\r\n            <option value=\"Comedy\">Comedy</option>\r\n            <option value=\"Drama\">Drama</option>\r\n            <option value=\"Horror\">Horror</option>\r\n            <option value=\"Romance\">Romance</option>\r\n            <option value=\"Sci-Fi\">Sci-Fi</option>\r\n            <option value=\"Thriller\">Thriller</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieDate\">Date:</label>\r\n          <input type=\"date\" id=\"movieDate\" v-model=\"newMovie.date\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"movieScore\">Score:</label>\r\n          <input type=\"number\" id=\"movieScore\" v-model=\"newMovie.score\" required />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"moviePoster\">Movie Poster:</label>\r\n          <input type=\"file\" id=\"moviePoster\" @change=\"handleImageUpload\" accept=\"image/*\" />\r\n        </div>\r\n        <div v-if=\"imagePreview\">\r\n          <h3>Image Preview:</h3>\r\n          <img :src=\"imagePreview\" alt=\"Image Preview\" style=\"max-width: 200px; margin-top: 10px;\"/>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn-form\">Add Movie</button>\r\n        </form>\r\n       </div>\r\n\r\n    </div>\r\n\r\n\r\n  </template>\r\n\r\n<script>\r\nimport { signOut } from \"firebase/auth\";\r\nimport {auth} from '../firebaseConfig';\r\nimport { getFirestore, collection, addDoc } from \"firebase/firestore\";\r\nimport{ ref, uploadBytes, getDownloadURL} from \"firebase/storage\";\r\nimport { storage } from \"../firebaseConfig\";\r\n\r\nconst db = getFirestore();\r\n\r\nexport default {\r\n  name: 'HomePage',\r\n  data(){\r\n    return{\r\n      isFormVisible: false,\r\n      newMovie:{\r\n        title: '',\r\n        genre: '',\r\n        date: '',\r\n        score: '',\r\n        poster: null,\r\n      },\r\n      imagePreview: null,\r\n    };\r\n  },\r\n  methods: {\r\n  async signoutuser() {\r\n    console.log(\"Sign out button clicked\");\r\n    try {\r\n      await signOut(auth);\r\n      console.log(\"User signed out\");\r\n      this.$router.push('/');\r\n    } catch (error) {\r\n      console.error(\"Error signing out: \", error);\r\n    }\r\n  },\r\n  toggleForm(){\r\n    this.isFormVisible = !this.isFormVisible;\r\n  },\r\n  handleImageUpload(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        \r\n        this.imagePreview = URL.createObjectURL(file);\r\n        this.newMovie.poster = file; \r\n        console.log('Poster uploaded:', this.newMovie.poster);\r\n      }else {\r\n        console.error('No file selected or invalid file.');\r\n    },\r\n  async addMovie(){\r\n    try {\r\n        if (!this.newMovie.poster || !(this.newMovie.poster instanceof File)) {\r\n          alert(\"Please upload a valid movie poster.\");\r\n          return;\r\n        }\r\n\r\n        // Upload poster to Firebase Storage\r\n        const posterRef = ref(storage, `posters/${this.newMovie.poster.name}`);\r\n        await uploadBytes(posterRef, this.newMovie.poster);\r\n        const posterURL = await getDownloadURL(posterRef);\r\n\r\n        // Add movie data to Firestore\r\n        const user = auth.currentUser;\r\n        await addDoc(collection(db, \"movies\"), {\r\n          title: this.newMovie.title,\r\n          genre: this.newMovie.genre,\r\n          date: this.newMovie.date,\r\n          score: this.newMovie.score,\r\n          posterURL,\r\n          userEmail: user.email,\r\n        });\r\n\r\n        console.log('Movie added successfully');\r\n        this.newMovie = { title: '', genre: '', date: '', score: '', poster: null };\r\n        this.imagePreview = null;\r\n        this.isFormVisible = false;\r\n      } catch (error) {\r\n        console.error(\"Error adding movie: \", error);\r\n      }\r\n    \r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style src=\"../styles/HomePage.css\"></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}